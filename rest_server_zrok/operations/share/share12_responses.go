// Code generated by go-swagger; DO NOT EDIT.

package share

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openziti/zrok/rest_model_zrok"
)

// Share12CreatedCode is the HTTP code returned for type Share12Created
const Share12CreatedCode int = 201

/*
Share12Created share created

swagger:response share12Created
*/
type Share12Created struct {

	/*
	  In: Body
	*/
	Payload *rest_model_zrok.ShareResponse `json:"body,omitempty"`
}

// NewShare12Created creates Share12Created with default headers values
func NewShare12Created() *Share12Created {

	return &Share12Created{}
}

// WithPayload adds the payload to the share12 created response
func (o *Share12Created) WithPayload(payload *rest_model_zrok.ShareResponse) *Share12Created {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the share12 created response
func (o *Share12Created) SetPayload(payload *rest_model_zrok.ShareResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *Share12Created) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Share12UnauthorizedCode is the HTTP code returned for type Share12Unauthorized
const Share12UnauthorizedCode int = 401

/*
Share12Unauthorized unauthorized

swagger:response share12Unauthorized
*/
type Share12Unauthorized struct {
}

// NewShare12Unauthorized creates Share12Unauthorized with default headers values
func NewShare12Unauthorized() *Share12Unauthorized {

	return &Share12Unauthorized{}
}

// WriteResponse to the client
func (o *Share12Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// Share12NotFoundCode is the HTTP code returned for type Share12NotFound
const Share12NotFoundCode int = 404

/*
Share12NotFound not found

swagger:response share12NotFound
*/
type Share12NotFound struct {
}

// NewShare12NotFound creates Share12NotFound with default headers values
func NewShare12NotFound() *Share12NotFound {

	return &Share12NotFound{}
}

// WriteResponse to the client
func (o *Share12NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// Share12ConflictCode is the HTTP code returned for type Share12Conflict
const Share12ConflictCode int = 409

/*
Share12Conflict conflict

swagger:response share12Conflict
*/
type Share12Conflict struct {

	/*
	  In: Body
	*/
	Payload rest_model_zrok.ErrorMessage `json:"body,omitempty"`
}

// NewShare12Conflict creates Share12Conflict with default headers values
func NewShare12Conflict() *Share12Conflict {

	return &Share12Conflict{}
}

// WithPayload adds the payload to the share12 conflict response
func (o *Share12Conflict) WithPayload(payload rest_model_zrok.ErrorMessage) *Share12Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the share12 conflict response
func (o *Share12Conflict) SetPayload(payload rest_model_zrok.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *Share12Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// Share12UnprocessableEntityCode is the HTTP code returned for type Share12UnprocessableEntity
const Share12UnprocessableEntityCode int = 422

/*
Share12UnprocessableEntity unprocessable

swagger:response share12UnprocessableEntity
*/
type Share12UnprocessableEntity struct {
}

// NewShare12UnprocessableEntity creates Share12UnprocessableEntity with default headers values
func NewShare12UnprocessableEntity() *Share12UnprocessableEntity {

	return &Share12UnprocessableEntity{}
}

// WriteResponse to the client
func (o *Share12UnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(422)
}

// Share12InternalServerErrorCode is the HTTP code returned for type Share12InternalServerError
const Share12InternalServerErrorCode int = 500

/*
Share12InternalServerError internal server error

swagger:response share12InternalServerError
*/
type Share12InternalServerError struct {

	/*
	  In: Body
	*/
	Payload rest_model_zrok.ErrorMessage `json:"body,omitempty"`
}

// NewShare12InternalServerError creates Share12InternalServerError with default headers values
func NewShare12InternalServerError() *Share12InternalServerError {

	return &Share12InternalServerError{}
}

// WithPayload adds the payload to the share12 internal server error response
func (o *Share12InternalServerError) WithPayload(payload rest_model_zrok.ErrorMessage) *Share12InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the share12 internal server error response
func (o *Share12InternalServerError) SetPayload(payload rest_model_zrok.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *Share12InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
