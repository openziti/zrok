// Code generated by go-swagger; DO NOT EDIT.

package share

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// ListNamesForNamespaceOKCode is the HTTP code returned for type ListNamesForNamespaceOK
const ListNamesForNamespaceOKCode int = 200

/*
ListNamesForNamespaceOK ok

swagger:response listNamesForNamespaceOK
*/
type ListNamesForNamespaceOK struct {

	/*
	  In: Body
	*/
	Payload []*ListNamesForNamespaceOKBodyItems0 `json:"body,omitempty"`
}

// NewListNamesForNamespaceOK creates ListNamesForNamespaceOK with default headers values
func NewListNamesForNamespaceOK() *ListNamesForNamespaceOK {

	return &ListNamesForNamespaceOK{}
}

// WithPayload adds the payload to the list names for namespace o k response
func (o *ListNamesForNamespaceOK) WithPayload(payload []*ListNamesForNamespaceOKBodyItems0) *ListNamesForNamespaceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list names for namespace o k response
func (o *ListNamesForNamespaceOK) SetPayload(payload []*ListNamesForNamespaceOKBodyItems0) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListNamesForNamespaceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*ListNamesForNamespaceOKBodyItems0, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListNamesForNamespaceUnauthorizedCode is the HTTP code returned for type ListNamesForNamespaceUnauthorized
const ListNamesForNamespaceUnauthorizedCode int = 401

/*
ListNamesForNamespaceUnauthorized unauthorized

swagger:response listNamesForNamespaceUnauthorized
*/
type ListNamesForNamespaceUnauthorized struct {
}

// NewListNamesForNamespaceUnauthorized creates ListNamesForNamespaceUnauthorized with default headers values
func NewListNamesForNamespaceUnauthorized() *ListNamesForNamespaceUnauthorized {

	return &ListNamesForNamespaceUnauthorized{}
}

// WriteResponse to the client
func (o *ListNamesForNamespaceUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// ListNamesForNamespaceNotFoundCode is the HTTP code returned for type ListNamesForNamespaceNotFound
const ListNamesForNamespaceNotFoundCode int = 404

/*
ListNamesForNamespaceNotFound namespace not found

swagger:response listNamesForNamespaceNotFound
*/
type ListNamesForNamespaceNotFound struct {
}

// NewListNamesForNamespaceNotFound creates ListNamesForNamespaceNotFound with default headers values
func NewListNamesForNamespaceNotFound() *ListNamesForNamespaceNotFound {

	return &ListNamesForNamespaceNotFound{}
}

// WriteResponse to the client
func (o *ListNamesForNamespaceNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// ListNamesForNamespaceInternalServerErrorCode is the HTTP code returned for type ListNamesForNamespaceInternalServerError
const ListNamesForNamespaceInternalServerErrorCode int = 500

/*
ListNamesForNamespaceInternalServerError internal server error

swagger:response listNamesForNamespaceInternalServerError
*/
type ListNamesForNamespaceInternalServerError struct {
}

// NewListNamesForNamespaceInternalServerError creates ListNamesForNamespaceInternalServerError with default headers values
func NewListNamesForNamespaceInternalServerError() *ListNamesForNamespaceInternalServerError {

	return &ListNamesForNamespaceInternalServerError{}
}

// WriteResponse to the client
func (o *ListNamesForNamespaceInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
