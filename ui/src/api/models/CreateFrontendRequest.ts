/* tslint:disable */
/* eslint-disable */
/**
 * zrok
 * zrok client access
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateFrontendRequest
 */
export interface CreateFrontendRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateFrontendRequest
     */
    zId?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateFrontendRequest
     */
    urlTemplate?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateFrontendRequest
     */
    publicName?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateFrontendRequest
     */
    permissionMode?: CreateFrontendRequestPermissionModeEnum;
}


/**
 * @export
 */
export const CreateFrontendRequestPermissionModeEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;
export type CreateFrontendRequestPermissionModeEnum = typeof CreateFrontendRequestPermissionModeEnum[keyof typeof CreateFrontendRequestPermissionModeEnum];


/**
 * Check if a given object implements the CreateFrontendRequest interface.
 */
export function instanceOfCreateFrontendRequest(value: object): value is CreateFrontendRequest {
    return true;
}

export function CreateFrontendRequestFromJSON(json: any): CreateFrontendRequest {
    return CreateFrontendRequestFromJSONTyped(json, false);
}

export function CreateFrontendRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateFrontendRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'zId': json['zId'] == null ? undefined : json['zId'],
        'urlTemplate': json['url_template'] == null ? undefined : json['url_template'],
        'publicName': json['public_name'] == null ? undefined : json['public_name'],
        'permissionMode': json['permissionMode'] == null ? undefined : json['permissionMode'],
    };
}

export function CreateFrontendRequestToJSON(json: any): CreateFrontendRequest {
    return CreateFrontendRequestToJSONTyped(json, false);
}

export function CreateFrontendRequestToJSONTyped(value?: CreateFrontendRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'zId': value['zId'],
        'url_template': value['urlTemplate'],
        'public_name': value['publicName'],
        'permissionMode': value['permissionMode'],
    };
}

