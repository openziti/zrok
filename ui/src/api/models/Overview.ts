/* tslint:disable */
/* eslint-disable */
/**
 * zrok
 * zrok client access
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EnvironmentAndResources } from './EnvironmentAndResources';
import {
    EnvironmentAndResourcesFromJSON,
    EnvironmentAndResourcesFromJSONTyped,
    EnvironmentAndResourcesToJSON,
    EnvironmentAndResourcesToJSONTyped,
} from './EnvironmentAndResources';

/**
 * 
 * @export
 * @interface Overview
 */
export interface Overview {
    /**
     * 
     * @type {boolean}
     * @memberof Overview
     */
    accountLimited?: boolean;
    /**
     * 
     * @type {Array<EnvironmentAndResources>}
     * @memberof Overview
     */
    environments?: Array<EnvironmentAndResources>;
}

/**
 * Check if a given object implements the Overview interface.
 */
export function instanceOfOverview(value: object): value is Overview {
    return true;
}

export function OverviewFromJSON(json: any): Overview {
    return OverviewFromJSONTyped(json, false);
}

export function OverviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): Overview {
    if (json == null) {
        return json;
    }
    return {
        
        'accountLimited': json['accountLimited'] == null ? undefined : json['accountLimited'],
        'environments': json['environments'] == null ? undefined : ((json['environments'] as Array<any>).map(EnvironmentAndResourcesFromJSON)),
    };
}

export function OverviewToJSON(json: any): Overview {
    return OverviewToJSONTyped(json, false);
}

export function OverviewToJSONTyped(value?: Overview | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'accountLimited': value['accountLimited'],
        'environments': value['environments'] == null ? undefined : ((value['environments'] as Array<any>).map(EnvironmentAndResourcesToJSON)),
    };
}

