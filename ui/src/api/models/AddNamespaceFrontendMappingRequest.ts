/* tslint:disable */
/* eslint-disable */
/**
 * zrok
 * zrok client access
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AddNamespaceFrontendMappingRequest
 */
export interface AddNamespaceFrontendMappingRequest {
    /**
     * 
     * @type {string}
     * @memberof AddNamespaceFrontendMappingRequest
     */
    namespaceToken?: string;
    /**
     * 
     * @type {string}
     * @memberof AddNamespaceFrontendMappingRequest
     */
    frontendToken?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AddNamespaceFrontendMappingRequest
     */
    isDefault?: boolean;
}

/**
 * Check if a given object implements the AddNamespaceFrontendMappingRequest interface.
 */
export function instanceOfAddNamespaceFrontendMappingRequest(value: object): value is AddNamespaceFrontendMappingRequest {
    return true;
}

export function AddNamespaceFrontendMappingRequestFromJSON(json: any): AddNamespaceFrontendMappingRequest {
    return AddNamespaceFrontendMappingRequestFromJSONTyped(json, false);
}

export function AddNamespaceFrontendMappingRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddNamespaceFrontendMappingRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'namespaceToken': json['namespaceToken'] == null ? undefined : json['namespaceToken'],
        'frontendToken': json['frontendToken'] == null ? undefined : json['frontendToken'],
        'isDefault': json['isDefault'] == null ? undefined : json['isDefault'],
    };
}

export function AddNamespaceFrontendMappingRequestToJSON(json: any): AddNamespaceFrontendMappingRequest {
    return AddNamespaceFrontendMappingRequestToJSONTyped(json, false);
}

export function AddNamespaceFrontendMappingRequestToJSONTyped(value?: AddNamespaceFrontendMappingRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'namespaceToken': value['namespaceToken'],
        'frontendToken': value['frontendToken'],
        'isDefault': value['isDefault'],
    };
}

