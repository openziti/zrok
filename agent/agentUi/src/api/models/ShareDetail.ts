/* tslint:disable */
/* eslint-disable */
/**
 * agent/agentGrpc/agent.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Failure } from './Failure';
import {
    FailureFromJSON,
    FailureFromJSONTyped,
    FailureToJSON,
    FailureToJSONTyped,
} from './Failure';

/**
 * 
 * @export
 * @interface ShareDetail
 */
export interface ShareDetail {
    /**
     * 
     * @type {string}
     * @memberof ShareDetail
     */
    token?: string;
    /**
     * 
     * @type {string}
     * @memberof ShareDetail
     */
    shareMode?: string;
    /**
     * 
     * @type {string}
     * @memberof ShareDetail
     */
    backendMode?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ShareDetail
     */
    frontendEndpoint?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ShareDetail
     */
    backendEndpoint?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ShareDetail
     */
    closed?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ShareDetail
     */
    status?: string;
    /**
     * 
     * @type {Failure}
     * @memberof ShareDetail
     */
    failure?: Failure;
}

/**
 * Check if a given object implements the ShareDetail interface.
 */
export function instanceOfShareDetail(value: object): value is ShareDetail {
    return true;
}

export function ShareDetailFromJSON(json: any): ShareDetail {
    return ShareDetailFromJSONTyped(json, false);
}

export function ShareDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShareDetail {
    if (json == null) {
        return json;
    }
    return {
        
        'token': json['token'] == null ? undefined : json['token'],
        'shareMode': json['shareMode'] == null ? undefined : json['shareMode'],
        'backendMode': json['backendMode'] == null ? undefined : json['backendMode'],
        'frontendEndpoint': json['frontendEndpoint'] == null ? undefined : json['frontendEndpoint'],
        'backendEndpoint': json['backendEndpoint'] == null ? undefined : json['backendEndpoint'],
        'closed': json['closed'] == null ? undefined : json['closed'],
        'status': json['status'] == null ? undefined : json['status'],
        'failure': json['failure'] == null ? undefined : FailureFromJSON(json['failure']),
    };
}

export function ShareDetailToJSON(json: any): ShareDetail {
    return ShareDetailToJSONTyped(json, false);
}

export function ShareDetailToJSONTyped(value?: ShareDetail | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'token': value['token'],
        'shareMode': value['shareMode'],
        'backendMode': value['backendMode'],
        'frontendEndpoint': value['frontendEndpoint'],
        'backendEndpoint': value['backendEndpoint'],
        'closed': value['closed'],
        'status': value['status'],
        'failure': FailureToJSON(value['failure']),
    };
}

