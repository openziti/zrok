# coding: utf-8

"""
    zrok

    zrok client access

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zrok_api.models.share_request12 import ShareRequest12

class TestShareRequest12(unittest.TestCase):
    """ShareRequest12 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ShareRequest12:
        """Test ShareRequest12
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ShareRequest12`
        """
        model = ShareRequest12()
        if include_optional:
            return ShareRequest12(
                env_zid = '',
                share_mode = 'public',
                namespace_selections = [
                    zrok_api.models.namespace_selection.namespaceSelection(
                        namespace_token = '', 
                        name = '', )
                    ],
                backend_mode = 'proxy',
                target = '',
                auth_scheme = '',
                basic_auth_users = [
                    zrok_api.models.auth_user.authUser(
                        username = '', 
                        password = '', )
                    ],
                oauth_provider = '',
                oauth_email_domains = [
                    ''
                    ],
                oauth_refresh_interval = '',
                permission_mode = 'open',
                access_grants = [
                    ''
                    ]
            )
        else:
            return ShareRequest12(
        )
        """

    def testShareRequest12(self):
        """Test ShareRequest12"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
