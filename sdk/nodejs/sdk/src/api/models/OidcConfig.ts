/* tslint:disable */
/* eslint-disable */
/**
 * zrok
 * zrok client access
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OidcConfig
 */
export interface OidcConfig {
    /**
     * 
     * @type {string}
     * @memberof OidcConfig
     */
    providerName?: string;
    /**
     * 
     * @type {string}
     * @memberof OidcConfig
     */
    clientId?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof OidcConfig
     */
    scopes?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof OidcConfig
     */
    authUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof OidcConfig
     */
    tokenUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof OidcConfig
     */
    emailEndpoint?: string;
    /**
     * 
     * @type {string}
     * @memberof OidcConfig
     */
    emailPath?: string;
    /**
     * 
     * @type {boolean}
     * @memberof OidcConfig
     */
    supportsPkce?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof OidcConfig
     */
    allowedEmailFilters?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof OidcConfig
     */
    authTimeout?: string;
}

/**
 * Check if a given object implements the OidcConfig interface.
 */
export function instanceOfOidcConfig(value: object): value is OidcConfig {
    return true;
}

export function OidcConfigFromJSON(json: any): OidcConfig {
    return OidcConfigFromJSONTyped(json, false);
}

export function OidcConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): OidcConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'providerName': json['providerName'] == null ? undefined : json['providerName'],
        'clientId': json['clientId'] == null ? undefined : json['clientId'],
        'scopes': json['scopes'] == null ? undefined : json['scopes'],
        'authUrl': json['authUrl'] == null ? undefined : json['authUrl'],
        'tokenUrl': json['tokenUrl'] == null ? undefined : json['tokenUrl'],
        'emailEndpoint': json['emailEndpoint'] == null ? undefined : json['emailEndpoint'],
        'emailPath': json['emailPath'] == null ? undefined : json['emailPath'],
        'supportsPkce': json['supportsPkce'] == null ? undefined : json['supportsPkce'],
        'allowedEmailFilters': json['allowedEmailFilters'] == null ? undefined : json['allowedEmailFilters'],
        'authTimeout': json['authTimeout'] == null ? undefined : json['authTimeout'],
    };
}

export function OidcConfigToJSON(json: any): OidcConfig {
    return OidcConfigToJSONTyped(json, false);
}

export function OidcConfigToJSONTyped(value?: OidcConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'providerName': value['providerName'],
        'clientId': value['clientId'],
        'scopes': value['scopes'],
        'authUrl': value['authUrl'],
        'tokenUrl': value['tokenUrl'],
        'emailEndpoint': value['emailEndpoint'],
        'emailPath': value['emailPath'],
        'supportsPkce': value['supportsPkce'],
        'allowedEmailFilters': value['allowedEmailFilters'],
        'authTimeout': value['authTimeout'],
    };
}

