/* tslint:disable */
/* eslint-disable */
/**
 * zrok
 * zrok client access
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RemoveNamespaceFrontendMappingRequest
 */
export interface RemoveNamespaceFrontendMappingRequest {
    /**
     * 
     * @type {string}
     * @memberof RemoveNamespaceFrontendMappingRequest
     */
    namespaceToken?: string;
    /**
     * 
     * @type {string}
     * @memberof RemoveNamespaceFrontendMappingRequest
     */
    frontendToken?: string;
}

/**
 * Check if a given object implements the RemoveNamespaceFrontendMappingRequest interface.
 */
export function instanceOfRemoveNamespaceFrontendMappingRequest(value: object): value is RemoveNamespaceFrontendMappingRequest {
    return true;
}

export function RemoveNamespaceFrontendMappingRequestFromJSON(json: any): RemoveNamespaceFrontendMappingRequest {
    return RemoveNamespaceFrontendMappingRequestFromJSONTyped(json, false);
}

export function RemoveNamespaceFrontendMappingRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RemoveNamespaceFrontendMappingRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'namespaceToken': json['namespaceToken'] == null ? undefined : json['namespaceToken'],
        'frontendToken': json['frontendToken'] == null ? undefined : json['frontendToken'],
    };
}

export function RemoveNamespaceFrontendMappingRequestToJSON(json: any): RemoveNamespaceFrontendMappingRequest {
    return RemoveNamespaceFrontendMappingRequestToJSONTyped(json, false);
}

export function RemoveNamespaceFrontendMappingRequestToJSONTyped(value?: RemoveNamespaceFrontendMappingRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'namespaceToken': value['namespaceToken'],
        'frontendToken': value['frontendToken'],
    };
}

