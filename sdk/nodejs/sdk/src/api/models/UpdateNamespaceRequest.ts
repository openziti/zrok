/* tslint:disable */
/* eslint-disable */
/**
 * zrok
 * zrok client access
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateNamespaceRequest
 */
export interface UpdateNamespaceRequest {
    /**
     * 
     * @type {string}
     * @memberof UpdateNamespaceRequest
     */
    namespaceToken?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateNamespaceRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateNamespaceRequest
     */
    description?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateNamespaceRequest
     */
    open?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateNamespaceRequest
     */
    openSet?: boolean;
}

/**
 * Check if a given object implements the UpdateNamespaceRequest interface.
 */
export function instanceOfUpdateNamespaceRequest(value: object): value is UpdateNamespaceRequest {
    return true;
}

export function UpdateNamespaceRequestFromJSON(json: any): UpdateNamespaceRequest {
    return UpdateNamespaceRequestFromJSONTyped(json, false);
}

export function UpdateNamespaceRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateNamespaceRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'namespaceToken': json['namespaceToken'] == null ? undefined : json['namespaceToken'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'open': json['open'] == null ? undefined : json['open'],
        'openSet': json['openSet'] == null ? undefined : json['openSet'],
    };
}

export function UpdateNamespaceRequestToJSON(json: any): UpdateNamespaceRequest {
    return UpdateNamespaceRequestToJSONTyped(json, false);
}

export function UpdateNamespaceRequestToJSONTyped(value?: UpdateNamespaceRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'namespaceToken': value['namespaceToken'],
        'name': value['name'],
        'description': value['description'],
        'open': value['open'],
        'openSet': value['openSet'],
    };
}

