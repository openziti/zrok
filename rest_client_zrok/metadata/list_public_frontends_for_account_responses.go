// Code generated by go-swagger; DO NOT EDIT.

package metadata

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ListPublicFrontendsForAccountReader is a Reader for the ListPublicFrontendsForAccount structure.
type ListPublicFrontendsForAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPublicFrontendsForAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListPublicFrontendsForAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListPublicFrontendsForAccountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListPublicFrontendsForAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /overview/public-frontends] listPublicFrontendsForAccount", response, response.Code())
	}
}

// NewListPublicFrontendsForAccountOK creates a ListPublicFrontendsForAccountOK with default headers values
func NewListPublicFrontendsForAccountOK() *ListPublicFrontendsForAccountOK {
	return &ListPublicFrontendsForAccountOK{}
}

/*
ListPublicFrontendsForAccountOK describes a response with status code 200, with default header values.

public frontends list returned
*/
type ListPublicFrontendsForAccountOK struct {
	Payload *ListPublicFrontendsForAccountOKBody
}

// IsSuccess returns true when this list public frontends for account o k response has a 2xx status code
func (o *ListPublicFrontendsForAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list public frontends for account o k response has a 3xx status code
func (o *ListPublicFrontendsForAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list public frontends for account o k response has a 4xx status code
func (o *ListPublicFrontendsForAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list public frontends for account o k response has a 5xx status code
func (o *ListPublicFrontendsForAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list public frontends for account o k response a status code equal to that given
func (o *ListPublicFrontendsForAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list public frontends for account o k response
func (o *ListPublicFrontendsForAccountOK) Code() int {
	return 200
}

func (o *ListPublicFrontendsForAccountOK) Error() string {
	return fmt.Sprintf("[GET /overview/public-frontends][%d] listPublicFrontendsForAccountOK  %+v", 200, o.Payload)
}

func (o *ListPublicFrontendsForAccountOK) String() string {
	return fmt.Sprintf("[GET /overview/public-frontends][%d] listPublicFrontendsForAccountOK  %+v", 200, o.Payload)
}

func (o *ListPublicFrontendsForAccountOK) GetPayload() *ListPublicFrontendsForAccountOKBody {
	return o.Payload
}

func (o *ListPublicFrontendsForAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListPublicFrontendsForAccountOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPublicFrontendsForAccountUnauthorized creates a ListPublicFrontendsForAccountUnauthorized with default headers values
func NewListPublicFrontendsForAccountUnauthorized() *ListPublicFrontendsForAccountUnauthorized {
	return &ListPublicFrontendsForAccountUnauthorized{}
}

/*
ListPublicFrontendsForAccountUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type ListPublicFrontendsForAccountUnauthorized struct {
}

// IsSuccess returns true when this list public frontends for account unauthorized response has a 2xx status code
func (o *ListPublicFrontendsForAccountUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list public frontends for account unauthorized response has a 3xx status code
func (o *ListPublicFrontendsForAccountUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list public frontends for account unauthorized response has a 4xx status code
func (o *ListPublicFrontendsForAccountUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list public frontends for account unauthorized response has a 5xx status code
func (o *ListPublicFrontendsForAccountUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list public frontends for account unauthorized response a status code equal to that given
func (o *ListPublicFrontendsForAccountUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list public frontends for account unauthorized response
func (o *ListPublicFrontendsForAccountUnauthorized) Code() int {
	return 401
}

func (o *ListPublicFrontendsForAccountUnauthorized) Error() string {
	return fmt.Sprintf("[GET /overview/public-frontends][%d] listPublicFrontendsForAccountUnauthorized ", 401)
}

func (o *ListPublicFrontendsForAccountUnauthorized) String() string {
	return fmt.Sprintf("[GET /overview/public-frontends][%d] listPublicFrontendsForAccountUnauthorized ", 401)
}

func (o *ListPublicFrontendsForAccountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListPublicFrontendsForAccountInternalServerError creates a ListPublicFrontendsForAccountInternalServerError with default headers values
func NewListPublicFrontendsForAccountInternalServerError() *ListPublicFrontendsForAccountInternalServerError {
	return &ListPublicFrontendsForAccountInternalServerError{}
}

/*
ListPublicFrontendsForAccountInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type ListPublicFrontendsForAccountInternalServerError struct {
}

// IsSuccess returns true when this list public frontends for account internal server error response has a 2xx status code
func (o *ListPublicFrontendsForAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list public frontends for account internal server error response has a 3xx status code
func (o *ListPublicFrontendsForAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list public frontends for account internal server error response has a 4xx status code
func (o *ListPublicFrontendsForAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list public frontends for account internal server error response has a 5xx status code
func (o *ListPublicFrontendsForAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list public frontends for account internal server error response a status code equal to that given
func (o *ListPublicFrontendsForAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list public frontends for account internal server error response
func (o *ListPublicFrontendsForAccountInternalServerError) Code() int {
	return 500
}

func (o *ListPublicFrontendsForAccountInternalServerError) Error() string {
	return fmt.Sprintf("[GET /overview/public-frontends][%d] listPublicFrontendsForAccountInternalServerError ", 500)
}

func (o *ListPublicFrontendsForAccountInternalServerError) String() string {
	return fmt.Sprintf("[GET /overview/public-frontends][%d] listPublicFrontendsForAccountInternalServerError ", 500)
}

func (o *ListPublicFrontendsForAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
ListPublicFrontendsForAccountOKBody list public frontends for account o k body
swagger:model ListPublicFrontendsForAccountOKBody
*/
type ListPublicFrontendsForAccountOKBody struct {

	// public frontends
	PublicFrontends []*ListPublicFrontendsForAccountOKBodyPublicFrontendsItems0 `json:"publicFrontends"`
}

// Validate validates this list public frontends for account o k body
func (o *ListPublicFrontendsForAccountOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePublicFrontends(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListPublicFrontendsForAccountOKBody) validatePublicFrontends(formats strfmt.Registry) error {
	if swag.IsZero(o.PublicFrontends) { // not required
		return nil
	}

	for i := 0; i < len(o.PublicFrontends); i++ {
		if swag.IsZero(o.PublicFrontends[i]) { // not required
			continue
		}

		if o.PublicFrontends[i] != nil {
			if err := o.PublicFrontends[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("listPublicFrontendsForAccountOK" + "." + "publicFrontends" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("listPublicFrontendsForAccountOK" + "." + "publicFrontends" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this list public frontends for account o k body based on the context it is used
func (o *ListPublicFrontendsForAccountOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidatePublicFrontends(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListPublicFrontendsForAccountOKBody) contextValidatePublicFrontends(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.PublicFrontends); i++ {

		if o.PublicFrontends[i] != nil {

			if swag.IsZero(o.PublicFrontends[i]) { // not required
				return nil
			}

			if err := o.PublicFrontends[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("listPublicFrontendsForAccountOK" + "." + "publicFrontends" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("listPublicFrontendsForAccountOK" + "." + "publicFrontends" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ListPublicFrontendsForAccountOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListPublicFrontendsForAccountOKBody) UnmarshalBinary(b []byte) error {
	var res ListPublicFrontendsForAccountOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListPublicFrontendsForAccountOKBodyPublicFrontendsItems0 list public frontends for account o k body public frontends items0
swagger:model ListPublicFrontendsForAccountOKBodyPublicFrontendsItems0
*/
type ListPublicFrontendsForAccountOKBodyPublicFrontendsItems0 struct {

	// public name
	PublicName string `json:"publicName,omitempty"`

	// url template
	URLTemplate string `json:"urlTemplate,omitempty"`
}

// Validate validates this list public frontends for account o k body public frontends items0
func (o *ListPublicFrontendsForAccountOKBodyPublicFrontendsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list public frontends for account o k body public frontends items0 based on context it is used
func (o *ListPublicFrontendsForAccountOKBodyPublicFrontendsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListPublicFrontendsForAccountOKBodyPublicFrontendsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListPublicFrontendsForAccountOKBodyPublicFrontendsItems0) UnmarshalBinary(b []byte) error {
	var res ListPublicFrontendsForAccountOKBodyPublicFrontendsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
