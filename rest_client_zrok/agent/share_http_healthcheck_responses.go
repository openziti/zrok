// Code generated by go-swagger; DO NOT EDIT.

package agent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ShareHTTPHealthcheckReader is a Reader for the ShareHTTPHealthcheck structure.
type ShareHTTPHealthcheckReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ShareHTTPHealthcheckReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewShareHTTPHealthcheckOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewShareHTTPHealthcheckUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewShareHTTPHealthcheckInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewShareHTTPHealthcheckBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /agent/share/http-healthcheck] shareHttpHealthcheck", response, response.Code())
	}
}

// NewShareHTTPHealthcheckOK creates a ShareHTTPHealthcheckOK with default headers values
func NewShareHTTPHealthcheckOK() *ShareHTTPHealthcheckOK {
	return &ShareHTTPHealthcheckOK{}
}

/*
ShareHTTPHealthcheckOK describes a response with status code 200, with default header values.

ok
*/
type ShareHTTPHealthcheckOK struct {
	Payload *ShareHTTPHealthcheckOKBody
}

// IsSuccess returns true when this share Http healthcheck o k response has a 2xx status code
func (o *ShareHTTPHealthcheckOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this share Http healthcheck o k response has a 3xx status code
func (o *ShareHTTPHealthcheckOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this share Http healthcheck o k response has a 4xx status code
func (o *ShareHTTPHealthcheckOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this share Http healthcheck o k response has a 5xx status code
func (o *ShareHTTPHealthcheckOK) IsServerError() bool {
	return false
}

// IsCode returns true when this share Http healthcheck o k response a status code equal to that given
func (o *ShareHTTPHealthcheckOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the share Http healthcheck o k response
func (o *ShareHTTPHealthcheckOK) Code() int {
	return 200
}

func (o *ShareHTTPHealthcheckOK) Error() string {
	return fmt.Sprintf("[POST /agent/share/http-healthcheck][%d] shareHttpHealthcheckOK  %+v", 200, o.Payload)
}

func (o *ShareHTTPHealthcheckOK) String() string {
	return fmt.Sprintf("[POST /agent/share/http-healthcheck][%d] shareHttpHealthcheckOK  %+v", 200, o.Payload)
}

func (o *ShareHTTPHealthcheckOK) GetPayload() *ShareHTTPHealthcheckOKBody {
	return o.Payload
}

func (o *ShareHTTPHealthcheckOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ShareHTTPHealthcheckOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShareHTTPHealthcheckUnauthorized creates a ShareHTTPHealthcheckUnauthorized with default headers values
func NewShareHTTPHealthcheckUnauthorized() *ShareHTTPHealthcheckUnauthorized {
	return &ShareHTTPHealthcheckUnauthorized{}
}

/*
ShareHTTPHealthcheckUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type ShareHTTPHealthcheckUnauthorized struct {
}

// IsSuccess returns true when this share Http healthcheck unauthorized response has a 2xx status code
func (o *ShareHTTPHealthcheckUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this share Http healthcheck unauthorized response has a 3xx status code
func (o *ShareHTTPHealthcheckUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this share Http healthcheck unauthorized response has a 4xx status code
func (o *ShareHTTPHealthcheckUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this share Http healthcheck unauthorized response has a 5xx status code
func (o *ShareHTTPHealthcheckUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this share Http healthcheck unauthorized response a status code equal to that given
func (o *ShareHTTPHealthcheckUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the share Http healthcheck unauthorized response
func (o *ShareHTTPHealthcheckUnauthorized) Code() int {
	return 401
}

func (o *ShareHTTPHealthcheckUnauthorized) Error() string {
	return fmt.Sprintf("[POST /agent/share/http-healthcheck][%d] shareHttpHealthcheckUnauthorized ", 401)
}

func (o *ShareHTTPHealthcheckUnauthorized) String() string {
	return fmt.Sprintf("[POST /agent/share/http-healthcheck][%d] shareHttpHealthcheckUnauthorized ", 401)
}

func (o *ShareHTTPHealthcheckUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewShareHTTPHealthcheckInternalServerError creates a ShareHTTPHealthcheckInternalServerError with default headers values
func NewShareHTTPHealthcheckInternalServerError() *ShareHTTPHealthcheckInternalServerError {
	return &ShareHTTPHealthcheckInternalServerError{}
}

/*
ShareHTTPHealthcheckInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type ShareHTTPHealthcheckInternalServerError struct {
}

// IsSuccess returns true when this share Http healthcheck internal server error response has a 2xx status code
func (o *ShareHTTPHealthcheckInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this share Http healthcheck internal server error response has a 3xx status code
func (o *ShareHTTPHealthcheckInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this share Http healthcheck internal server error response has a 4xx status code
func (o *ShareHTTPHealthcheckInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this share Http healthcheck internal server error response has a 5xx status code
func (o *ShareHTTPHealthcheckInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this share Http healthcheck internal server error response a status code equal to that given
func (o *ShareHTTPHealthcheckInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the share Http healthcheck internal server error response
func (o *ShareHTTPHealthcheckInternalServerError) Code() int {
	return 500
}

func (o *ShareHTTPHealthcheckInternalServerError) Error() string {
	return fmt.Sprintf("[POST /agent/share/http-healthcheck][%d] shareHttpHealthcheckInternalServerError ", 500)
}

func (o *ShareHTTPHealthcheckInternalServerError) String() string {
	return fmt.Sprintf("[POST /agent/share/http-healthcheck][%d] shareHttpHealthcheckInternalServerError ", 500)
}

func (o *ShareHTTPHealthcheckInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewShareHTTPHealthcheckBadGateway creates a ShareHTTPHealthcheckBadGateway with default headers values
func NewShareHTTPHealthcheckBadGateway() *ShareHTTPHealthcheckBadGateway {
	return &ShareHTTPHealthcheckBadGateway{}
}

/*
ShareHTTPHealthcheckBadGateway describes a response with status code 502, with default header values.

bad gateway; agent not reachable
*/
type ShareHTTPHealthcheckBadGateway struct {
}

// IsSuccess returns true when this share Http healthcheck bad gateway response has a 2xx status code
func (o *ShareHTTPHealthcheckBadGateway) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this share Http healthcheck bad gateway response has a 3xx status code
func (o *ShareHTTPHealthcheckBadGateway) IsRedirect() bool {
	return false
}

// IsClientError returns true when this share Http healthcheck bad gateway response has a 4xx status code
func (o *ShareHTTPHealthcheckBadGateway) IsClientError() bool {
	return false
}

// IsServerError returns true when this share Http healthcheck bad gateway response has a 5xx status code
func (o *ShareHTTPHealthcheckBadGateway) IsServerError() bool {
	return true
}

// IsCode returns true when this share Http healthcheck bad gateway response a status code equal to that given
func (o *ShareHTTPHealthcheckBadGateway) IsCode(code int) bool {
	return code == 502
}

// Code gets the status code for the share Http healthcheck bad gateway response
func (o *ShareHTTPHealthcheckBadGateway) Code() int {
	return 502
}

func (o *ShareHTTPHealthcheckBadGateway) Error() string {
	return fmt.Sprintf("[POST /agent/share/http-healthcheck][%d] shareHttpHealthcheckBadGateway ", 502)
}

func (o *ShareHTTPHealthcheckBadGateway) String() string {
	return fmt.Sprintf("[POST /agent/share/http-healthcheck][%d] shareHttpHealthcheckBadGateway ", 502)
}

func (o *ShareHTTPHealthcheckBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
ShareHTTPHealthcheckBody share HTTP healthcheck body
swagger:model ShareHTTPHealthcheckBody
*/
type ShareHTTPHealthcheckBody struct {

	// endpoint
	Endpoint string `json:"endpoint,omitempty"`

	// env z Id
	EnvZID string `json:"envZId,omitempty"`

	// expected Http response
	ExpectedHTTPResponse float64 `json:"expectedHttpResponse,omitempty"`

	// http verb
	HTTPVerb string `json:"httpVerb,omitempty"`

	// share token
	ShareToken string `json:"shareToken,omitempty"`

	// timeout ms
	TimeoutMs float64 `json:"timeoutMs,omitempty"`
}

// Validate validates this share HTTP healthcheck body
func (o *ShareHTTPHealthcheckBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this share HTTP healthcheck body based on context it is used
func (o *ShareHTTPHealthcheckBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ShareHTTPHealthcheckBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ShareHTTPHealthcheckBody) UnmarshalBinary(b []byte) error {
	var res ShareHTTPHealthcheckBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ShareHTTPHealthcheckOKBody share HTTP healthcheck o k body
swagger:model ShareHTTPHealthcheckOKBody
*/
type ShareHTTPHealthcheckOKBody struct {

	// error
	Error string `json:"error,omitempty"`

	// healthy
	Healthy bool `json:"healthy,omitempty"`
}

// Validate validates this share HTTP healthcheck o k body
func (o *ShareHTTPHealthcheckOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this share HTTP healthcheck o k body based on context it is used
func (o *ShareHTTPHealthcheckOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ShareHTTPHealthcheckOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ShareHTTPHealthcheckOKBody) UnmarshalBinary(b []byte) error {
	var res ShareHTTPHealthcheckOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
