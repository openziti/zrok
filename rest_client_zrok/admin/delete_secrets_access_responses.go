// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeleteSecretsAccessReader is a Reader for the DeleteSecretsAccess structure.
type DeleteSecretsAccessReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSecretsAccessReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteSecretsAccessOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteSecretsAccessBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteSecretsAccessUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteSecretsAccessInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /secrets/access] deleteSecretsAccess", response, response.Code())
	}
}

// NewDeleteSecretsAccessOK creates a DeleteSecretsAccessOK with default headers values
func NewDeleteSecretsAccessOK() *DeleteSecretsAccessOK {
	return &DeleteSecretsAccessOK{}
}

/*
DeleteSecretsAccessOK describes a response with status code 200, with default header values.

ok
*/
type DeleteSecretsAccessOK struct {
}

// IsSuccess returns true when this delete secrets access o k response has a 2xx status code
func (o *DeleteSecretsAccessOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete secrets access o k response has a 3xx status code
func (o *DeleteSecretsAccessOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete secrets access o k response has a 4xx status code
func (o *DeleteSecretsAccessOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete secrets access o k response has a 5xx status code
func (o *DeleteSecretsAccessOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete secrets access o k response a status code equal to that given
func (o *DeleteSecretsAccessOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete secrets access o k response
func (o *DeleteSecretsAccessOK) Code() int {
	return 200
}

func (o *DeleteSecretsAccessOK) Error() string {
	return fmt.Sprintf("[DELETE /secrets/access][%d] deleteSecretsAccessOK ", 200)
}

func (o *DeleteSecretsAccessOK) String() string {
	return fmt.Sprintf("[DELETE /secrets/access][%d] deleteSecretsAccessOK ", 200)
}

func (o *DeleteSecretsAccessOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSecretsAccessBadRequest creates a DeleteSecretsAccessBadRequest with default headers values
func NewDeleteSecretsAccessBadRequest() *DeleteSecretsAccessBadRequest {
	return &DeleteSecretsAccessBadRequest{}
}

/*
DeleteSecretsAccessBadRequest describes a response with status code 400, with default header values.

access not removed
*/
type DeleteSecretsAccessBadRequest struct {
}

// IsSuccess returns true when this delete secrets access bad request response has a 2xx status code
func (o *DeleteSecretsAccessBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete secrets access bad request response has a 3xx status code
func (o *DeleteSecretsAccessBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete secrets access bad request response has a 4xx status code
func (o *DeleteSecretsAccessBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete secrets access bad request response has a 5xx status code
func (o *DeleteSecretsAccessBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete secrets access bad request response a status code equal to that given
func (o *DeleteSecretsAccessBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete secrets access bad request response
func (o *DeleteSecretsAccessBadRequest) Code() int {
	return 400
}

func (o *DeleteSecretsAccessBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /secrets/access][%d] deleteSecretsAccessBadRequest ", 400)
}

func (o *DeleteSecretsAccessBadRequest) String() string {
	return fmt.Sprintf("[DELETE /secrets/access][%d] deleteSecretsAccessBadRequest ", 400)
}

func (o *DeleteSecretsAccessBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSecretsAccessUnauthorized creates a DeleteSecretsAccessUnauthorized with default headers values
func NewDeleteSecretsAccessUnauthorized() *DeleteSecretsAccessUnauthorized {
	return &DeleteSecretsAccessUnauthorized{}
}

/*
DeleteSecretsAccessUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type DeleteSecretsAccessUnauthorized struct {
}

// IsSuccess returns true when this delete secrets access unauthorized response has a 2xx status code
func (o *DeleteSecretsAccessUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete secrets access unauthorized response has a 3xx status code
func (o *DeleteSecretsAccessUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete secrets access unauthorized response has a 4xx status code
func (o *DeleteSecretsAccessUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete secrets access unauthorized response has a 5xx status code
func (o *DeleteSecretsAccessUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete secrets access unauthorized response a status code equal to that given
func (o *DeleteSecretsAccessUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete secrets access unauthorized response
func (o *DeleteSecretsAccessUnauthorized) Code() int {
	return 401
}

func (o *DeleteSecretsAccessUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /secrets/access][%d] deleteSecretsAccessUnauthorized ", 401)
}

func (o *DeleteSecretsAccessUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /secrets/access][%d] deleteSecretsAccessUnauthorized ", 401)
}

func (o *DeleteSecretsAccessUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSecretsAccessInternalServerError creates a DeleteSecretsAccessInternalServerError with default headers values
func NewDeleteSecretsAccessInternalServerError() *DeleteSecretsAccessInternalServerError {
	return &DeleteSecretsAccessInternalServerError{}
}

/*
DeleteSecretsAccessInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type DeleteSecretsAccessInternalServerError struct {
}

// IsSuccess returns true when this delete secrets access internal server error response has a 2xx status code
func (o *DeleteSecretsAccessInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete secrets access internal server error response has a 3xx status code
func (o *DeleteSecretsAccessInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete secrets access internal server error response has a 4xx status code
func (o *DeleteSecretsAccessInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete secrets access internal server error response has a 5xx status code
func (o *DeleteSecretsAccessInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete secrets access internal server error response a status code equal to that given
func (o *DeleteSecretsAccessInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete secrets access internal server error response
func (o *DeleteSecretsAccessInternalServerError) Code() int {
	return 500
}

func (o *DeleteSecretsAccessInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /secrets/access][%d] deleteSecretsAccessInternalServerError ", 500)
}

func (o *DeleteSecretsAccessInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /secrets/access][%d] deleteSecretsAccessInternalServerError ", 500)
}

func (o *DeleteSecretsAccessInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
DeleteSecretsAccessBody delete secrets access body
swagger:model DeleteSecretsAccessBody
*/
type DeleteSecretsAccessBody struct {

	// secrets identity z Id
	SecretsIdentityZID string `json:"secretsIdentityZId,omitempty"`
}

// Validate validates this delete secrets access body
func (o *DeleteSecretsAccessBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete secrets access body based on context it is used
func (o *DeleteSecretsAccessBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteSecretsAccessBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteSecretsAccessBody) UnmarshalBinary(b []byte) error {
	var res DeleteSecretsAccessBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
