// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RemoveNamespaceGrantReader is a Reader for the RemoveNamespaceGrant structure.
type RemoveNamespaceGrantReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveNamespaceGrantReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRemoveNamespaceGrantOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRemoveNamespaceGrantUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRemoveNamespaceGrantNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRemoveNamespaceGrantInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /namespace/grant] removeNamespaceGrant", response, response.Code())
	}
}

// NewRemoveNamespaceGrantOK creates a RemoveNamespaceGrantOK with default headers values
func NewRemoveNamespaceGrantOK() *RemoveNamespaceGrantOK {
	return &RemoveNamespaceGrantOK{}
}

/*
RemoveNamespaceGrantOK describes a response with status code 200, with default header values.

namespace grant removed
*/
type RemoveNamespaceGrantOK struct {
}

// IsSuccess returns true when this remove namespace grant o k response has a 2xx status code
func (o *RemoveNamespaceGrantOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this remove namespace grant o k response has a 3xx status code
func (o *RemoveNamespaceGrantOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove namespace grant o k response has a 4xx status code
func (o *RemoveNamespaceGrantOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove namespace grant o k response has a 5xx status code
func (o *RemoveNamespaceGrantOK) IsServerError() bool {
	return false
}

// IsCode returns true when this remove namespace grant o k response a status code equal to that given
func (o *RemoveNamespaceGrantOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the remove namespace grant o k response
func (o *RemoveNamespaceGrantOK) Code() int {
	return 200
}

func (o *RemoveNamespaceGrantOK) Error() string {
	return fmt.Sprintf("[DELETE /namespace/grant][%d] removeNamespaceGrantOK ", 200)
}

func (o *RemoveNamespaceGrantOK) String() string {
	return fmt.Sprintf("[DELETE /namespace/grant][%d] removeNamespaceGrantOK ", 200)
}

func (o *RemoveNamespaceGrantOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveNamespaceGrantUnauthorized creates a RemoveNamespaceGrantUnauthorized with default headers values
func NewRemoveNamespaceGrantUnauthorized() *RemoveNamespaceGrantUnauthorized {
	return &RemoveNamespaceGrantUnauthorized{}
}

/*
RemoveNamespaceGrantUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type RemoveNamespaceGrantUnauthorized struct {
}

// IsSuccess returns true when this remove namespace grant unauthorized response has a 2xx status code
func (o *RemoveNamespaceGrantUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove namespace grant unauthorized response has a 3xx status code
func (o *RemoveNamespaceGrantUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove namespace grant unauthorized response has a 4xx status code
func (o *RemoveNamespaceGrantUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove namespace grant unauthorized response has a 5xx status code
func (o *RemoveNamespaceGrantUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this remove namespace grant unauthorized response a status code equal to that given
func (o *RemoveNamespaceGrantUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the remove namespace grant unauthorized response
func (o *RemoveNamespaceGrantUnauthorized) Code() int {
	return 401
}

func (o *RemoveNamespaceGrantUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /namespace/grant][%d] removeNamespaceGrantUnauthorized ", 401)
}

func (o *RemoveNamespaceGrantUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /namespace/grant][%d] removeNamespaceGrantUnauthorized ", 401)
}

func (o *RemoveNamespaceGrantUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveNamespaceGrantNotFound creates a RemoveNamespaceGrantNotFound with default headers values
func NewRemoveNamespaceGrantNotFound() *RemoveNamespaceGrantNotFound {
	return &RemoveNamespaceGrantNotFound{}
}

/*
RemoveNamespaceGrantNotFound describes a response with status code 404, with default header values.

not found
*/
type RemoveNamespaceGrantNotFound struct {
}

// IsSuccess returns true when this remove namespace grant not found response has a 2xx status code
func (o *RemoveNamespaceGrantNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove namespace grant not found response has a 3xx status code
func (o *RemoveNamespaceGrantNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove namespace grant not found response has a 4xx status code
func (o *RemoveNamespaceGrantNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove namespace grant not found response has a 5xx status code
func (o *RemoveNamespaceGrantNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this remove namespace grant not found response a status code equal to that given
func (o *RemoveNamespaceGrantNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the remove namespace grant not found response
func (o *RemoveNamespaceGrantNotFound) Code() int {
	return 404
}

func (o *RemoveNamespaceGrantNotFound) Error() string {
	return fmt.Sprintf("[DELETE /namespace/grant][%d] removeNamespaceGrantNotFound ", 404)
}

func (o *RemoveNamespaceGrantNotFound) String() string {
	return fmt.Sprintf("[DELETE /namespace/grant][%d] removeNamespaceGrantNotFound ", 404)
}

func (o *RemoveNamespaceGrantNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveNamespaceGrantInternalServerError creates a RemoveNamespaceGrantInternalServerError with default headers values
func NewRemoveNamespaceGrantInternalServerError() *RemoveNamespaceGrantInternalServerError {
	return &RemoveNamespaceGrantInternalServerError{}
}

/*
RemoveNamespaceGrantInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type RemoveNamespaceGrantInternalServerError struct {
}

// IsSuccess returns true when this remove namespace grant internal server error response has a 2xx status code
func (o *RemoveNamespaceGrantInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove namespace grant internal server error response has a 3xx status code
func (o *RemoveNamespaceGrantInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove namespace grant internal server error response has a 4xx status code
func (o *RemoveNamespaceGrantInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove namespace grant internal server error response has a 5xx status code
func (o *RemoveNamespaceGrantInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this remove namespace grant internal server error response a status code equal to that given
func (o *RemoveNamespaceGrantInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the remove namespace grant internal server error response
func (o *RemoveNamespaceGrantInternalServerError) Code() int {
	return 500
}

func (o *RemoveNamespaceGrantInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /namespace/grant][%d] removeNamespaceGrantInternalServerError ", 500)
}

func (o *RemoveNamespaceGrantInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /namespace/grant][%d] removeNamespaceGrantInternalServerError ", 500)
}

func (o *RemoveNamespaceGrantInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
RemoveNamespaceGrantBody remove namespace grant body
swagger:model RemoveNamespaceGrantBody
*/
type RemoveNamespaceGrantBody struct {

	// email
	Email string `json:"email,omitempty"`

	// namespace token
	NamespaceToken string `json:"namespaceToken,omitempty"`
}

// Validate validates this remove namespace grant body
func (o *RemoveNamespaceGrantBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this remove namespace grant body based on context it is used
func (o *RemoveNamespaceGrantBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RemoveNamespaceGrantBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RemoveNamespaceGrantBody) UnmarshalBinary(b []byte) error {
	var res RemoveNamespaceGrantBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
