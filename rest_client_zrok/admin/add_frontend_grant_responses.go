// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/openziti/zrok/rest_model_zrok"
)

// AddFrontendGrantReader is a Reader for the AddFrontendGrant structure.
type AddFrontendGrantReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddFrontendGrantReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddFrontendGrantOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAddFrontendGrantUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddFrontendGrantNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddFrontendGrantInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /frontend/grant] addFrontendGrant", response, response.Code())
	}
}

// NewAddFrontendGrantOK creates a AddFrontendGrantOK with default headers values
func NewAddFrontendGrantOK() *AddFrontendGrantOK {
	return &AddFrontendGrantOK{}
}

/*
AddFrontendGrantOK describes a response with status code 200, with default header values.

ok
*/
type AddFrontendGrantOK struct {
}

// IsSuccess returns true when this add frontend grant o k response has a 2xx status code
func (o *AddFrontendGrantOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add frontend grant o k response has a 3xx status code
func (o *AddFrontendGrantOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add frontend grant o k response has a 4xx status code
func (o *AddFrontendGrantOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add frontend grant o k response has a 5xx status code
func (o *AddFrontendGrantOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add frontend grant o k response a status code equal to that given
func (o *AddFrontendGrantOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add frontend grant o k response
func (o *AddFrontendGrantOK) Code() int {
	return 200
}

func (o *AddFrontendGrantOK) Error() string {
	return fmt.Sprintf("[POST /frontend/grant][%d] addFrontendGrantOK ", 200)
}

func (o *AddFrontendGrantOK) String() string {
	return fmt.Sprintf("[POST /frontend/grant][%d] addFrontendGrantOK ", 200)
}

func (o *AddFrontendGrantOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddFrontendGrantUnauthorized creates a AddFrontendGrantUnauthorized with default headers values
func NewAddFrontendGrantUnauthorized() *AddFrontendGrantUnauthorized {
	return &AddFrontendGrantUnauthorized{}
}

/*
AddFrontendGrantUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type AddFrontendGrantUnauthorized struct {
}

// IsSuccess returns true when this add frontend grant unauthorized response has a 2xx status code
func (o *AddFrontendGrantUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add frontend grant unauthorized response has a 3xx status code
func (o *AddFrontendGrantUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add frontend grant unauthorized response has a 4xx status code
func (o *AddFrontendGrantUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add frontend grant unauthorized response has a 5xx status code
func (o *AddFrontendGrantUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add frontend grant unauthorized response a status code equal to that given
func (o *AddFrontendGrantUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add frontend grant unauthorized response
func (o *AddFrontendGrantUnauthorized) Code() int {
	return 401
}

func (o *AddFrontendGrantUnauthorized) Error() string {
	return fmt.Sprintf("[POST /frontend/grant][%d] addFrontendGrantUnauthorized ", 401)
}

func (o *AddFrontendGrantUnauthorized) String() string {
	return fmt.Sprintf("[POST /frontend/grant][%d] addFrontendGrantUnauthorized ", 401)
}

func (o *AddFrontendGrantUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddFrontendGrantNotFound creates a AddFrontendGrantNotFound with default headers values
func NewAddFrontendGrantNotFound() *AddFrontendGrantNotFound {
	return &AddFrontendGrantNotFound{}
}

/*
AddFrontendGrantNotFound describes a response with status code 404, with default header values.

not found
*/
type AddFrontendGrantNotFound struct {
	Payload rest_model_zrok.ErrorMessage
}

// IsSuccess returns true when this add frontend grant not found response has a 2xx status code
func (o *AddFrontendGrantNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add frontend grant not found response has a 3xx status code
func (o *AddFrontendGrantNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add frontend grant not found response has a 4xx status code
func (o *AddFrontendGrantNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add frontend grant not found response has a 5xx status code
func (o *AddFrontendGrantNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add frontend grant not found response a status code equal to that given
func (o *AddFrontendGrantNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add frontend grant not found response
func (o *AddFrontendGrantNotFound) Code() int {
	return 404
}

func (o *AddFrontendGrantNotFound) Error() string {
	return fmt.Sprintf("[POST /frontend/grant][%d] addFrontendGrantNotFound  %+v", 404, o.Payload)
}

func (o *AddFrontendGrantNotFound) String() string {
	return fmt.Sprintf("[POST /frontend/grant][%d] addFrontendGrantNotFound  %+v", 404, o.Payload)
}

func (o *AddFrontendGrantNotFound) GetPayload() rest_model_zrok.ErrorMessage {
	return o.Payload
}

func (o *AddFrontendGrantNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddFrontendGrantInternalServerError creates a AddFrontendGrantInternalServerError with default headers values
func NewAddFrontendGrantInternalServerError() *AddFrontendGrantInternalServerError {
	return &AddFrontendGrantInternalServerError{}
}

/*
AddFrontendGrantInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type AddFrontendGrantInternalServerError struct {
}

// IsSuccess returns true when this add frontend grant internal server error response has a 2xx status code
func (o *AddFrontendGrantInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add frontend grant internal server error response has a 3xx status code
func (o *AddFrontendGrantInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add frontend grant internal server error response has a 4xx status code
func (o *AddFrontendGrantInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add frontend grant internal server error response has a 5xx status code
func (o *AddFrontendGrantInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add frontend grant internal server error response a status code equal to that given
func (o *AddFrontendGrantInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add frontend grant internal server error response
func (o *AddFrontendGrantInternalServerError) Code() int {
	return 500
}

func (o *AddFrontendGrantInternalServerError) Error() string {
	return fmt.Sprintf("[POST /frontend/grant][%d] addFrontendGrantInternalServerError ", 500)
}

func (o *AddFrontendGrantInternalServerError) String() string {
	return fmt.Sprintf("[POST /frontend/grant][%d] addFrontendGrantInternalServerError ", 500)
}

func (o *AddFrontendGrantInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
AddFrontendGrantBody add frontend grant body
swagger:model AddFrontendGrantBody
*/
type AddFrontendGrantBody struct {

	// email
	Email string `json:"email,omitempty"`

	// frontend token
	FrontendToken string `json:"frontendToken,omitempty"`
}

// Validate validates this add frontend grant body
func (o *AddFrontendGrantBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this add frontend grant body based on context it is used
func (o *AddFrontendGrantBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AddFrontendGrantBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AddFrontendGrantBody) UnmarshalBinary(b []byte) error {
	var res AddFrontendGrantBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
