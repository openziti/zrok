// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RemoveNamespaceFrontendMappingReader is a Reader for the RemoveNamespaceFrontendMapping structure.
type RemoveNamespaceFrontendMappingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveNamespaceFrontendMappingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRemoveNamespaceFrontendMappingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRemoveNamespaceFrontendMappingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRemoveNamespaceFrontendMappingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRemoveNamespaceFrontendMappingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /namespace/frontend/mapping] removeNamespaceFrontendMapping", response, response.Code())
	}
}

// NewRemoveNamespaceFrontendMappingOK creates a RemoveNamespaceFrontendMappingOK with default headers values
func NewRemoveNamespaceFrontendMappingOK() *RemoveNamespaceFrontendMappingOK {
	return &RemoveNamespaceFrontendMappingOK{}
}

/*
RemoveNamespaceFrontendMappingOK describes a response with status code 200, with default header values.

namespace frontend mapping removed
*/
type RemoveNamespaceFrontendMappingOK struct {
}

// IsSuccess returns true when this remove namespace frontend mapping o k response has a 2xx status code
func (o *RemoveNamespaceFrontendMappingOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this remove namespace frontend mapping o k response has a 3xx status code
func (o *RemoveNamespaceFrontendMappingOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove namespace frontend mapping o k response has a 4xx status code
func (o *RemoveNamespaceFrontendMappingOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove namespace frontend mapping o k response has a 5xx status code
func (o *RemoveNamespaceFrontendMappingOK) IsServerError() bool {
	return false
}

// IsCode returns true when this remove namespace frontend mapping o k response a status code equal to that given
func (o *RemoveNamespaceFrontendMappingOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the remove namespace frontend mapping o k response
func (o *RemoveNamespaceFrontendMappingOK) Code() int {
	return 200
}

func (o *RemoveNamespaceFrontendMappingOK) Error() string {
	return fmt.Sprintf("[DELETE /namespace/frontend/mapping][%d] removeNamespaceFrontendMappingOK ", 200)
}

func (o *RemoveNamespaceFrontendMappingOK) String() string {
	return fmt.Sprintf("[DELETE /namespace/frontend/mapping][%d] removeNamespaceFrontendMappingOK ", 200)
}

func (o *RemoveNamespaceFrontendMappingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveNamespaceFrontendMappingUnauthorized creates a RemoveNamespaceFrontendMappingUnauthorized with default headers values
func NewRemoveNamespaceFrontendMappingUnauthorized() *RemoveNamespaceFrontendMappingUnauthorized {
	return &RemoveNamespaceFrontendMappingUnauthorized{}
}

/*
RemoveNamespaceFrontendMappingUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type RemoveNamespaceFrontendMappingUnauthorized struct {
}

// IsSuccess returns true when this remove namespace frontend mapping unauthorized response has a 2xx status code
func (o *RemoveNamespaceFrontendMappingUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove namespace frontend mapping unauthorized response has a 3xx status code
func (o *RemoveNamespaceFrontendMappingUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove namespace frontend mapping unauthorized response has a 4xx status code
func (o *RemoveNamespaceFrontendMappingUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove namespace frontend mapping unauthorized response has a 5xx status code
func (o *RemoveNamespaceFrontendMappingUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this remove namespace frontend mapping unauthorized response a status code equal to that given
func (o *RemoveNamespaceFrontendMappingUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the remove namespace frontend mapping unauthorized response
func (o *RemoveNamespaceFrontendMappingUnauthorized) Code() int {
	return 401
}

func (o *RemoveNamespaceFrontendMappingUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /namespace/frontend/mapping][%d] removeNamespaceFrontendMappingUnauthorized ", 401)
}

func (o *RemoveNamespaceFrontendMappingUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /namespace/frontend/mapping][%d] removeNamespaceFrontendMappingUnauthorized ", 401)
}

func (o *RemoveNamespaceFrontendMappingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveNamespaceFrontendMappingNotFound creates a RemoveNamespaceFrontendMappingNotFound with default headers values
func NewRemoveNamespaceFrontendMappingNotFound() *RemoveNamespaceFrontendMappingNotFound {
	return &RemoveNamespaceFrontendMappingNotFound{}
}

/*
RemoveNamespaceFrontendMappingNotFound describes a response with status code 404, with default header values.

not found
*/
type RemoveNamespaceFrontendMappingNotFound struct {
}

// IsSuccess returns true when this remove namespace frontend mapping not found response has a 2xx status code
func (o *RemoveNamespaceFrontendMappingNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove namespace frontend mapping not found response has a 3xx status code
func (o *RemoveNamespaceFrontendMappingNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove namespace frontend mapping not found response has a 4xx status code
func (o *RemoveNamespaceFrontendMappingNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove namespace frontend mapping not found response has a 5xx status code
func (o *RemoveNamespaceFrontendMappingNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this remove namespace frontend mapping not found response a status code equal to that given
func (o *RemoveNamespaceFrontendMappingNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the remove namespace frontend mapping not found response
func (o *RemoveNamespaceFrontendMappingNotFound) Code() int {
	return 404
}

func (o *RemoveNamespaceFrontendMappingNotFound) Error() string {
	return fmt.Sprintf("[DELETE /namespace/frontend/mapping][%d] removeNamespaceFrontendMappingNotFound ", 404)
}

func (o *RemoveNamespaceFrontendMappingNotFound) String() string {
	return fmt.Sprintf("[DELETE /namespace/frontend/mapping][%d] removeNamespaceFrontendMappingNotFound ", 404)
}

func (o *RemoveNamespaceFrontendMappingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveNamespaceFrontendMappingInternalServerError creates a RemoveNamespaceFrontendMappingInternalServerError with default headers values
func NewRemoveNamespaceFrontendMappingInternalServerError() *RemoveNamespaceFrontendMappingInternalServerError {
	return &RemoveNamespaceFrontendMappingInternalServerError{}
}

/*
RemoveNamespaceFrontendMappingInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type RemoveNamespaceFrontendMappingInternalServerError struct {
}

// IsSuccess returns true when this remove namespace frontend mapping internal server error response has a 2xx status code
func (o *RemoveNamespaceFrontendMappingInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove namespace frontend mapping internal server error response has a 3xx status code
func (o *RemoveNamespaceFrontendMappingInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove namespace frontend mapping internal server error response has a 4xx status code
func (o *RemoveNamespaceFrontendMappingInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove namespace frontend mapping internal server error response has a 5xx status code
func (o *RemoveNamespaceFrontendMappingInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this remove namespace frontend mapping internal server error response a status code equal to that given
func (o *RemoveNamespaceFrontendMappingInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the remove namespace frontend mapping internal server error response
func (o *RemoveNamespaceFrontendMappingInternalServerError) Code() int {
	return 500
}

func (o *RemoveNamespaceFrontendMappingInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /namespace/frontend/mapping][%d] removeNamespaceFrontendMappingInternalServerError ", 500)
}

func (o *RemoveNamespaceFrontendMappingInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /namespace/frontend/mapping][%d] removeNamespaceFrontendMappingInternalServerError ", 500)
}

func (o *RemoveNamespaceFrontendMappingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
RemoveNamespaceFrontendMappingBody remove namespace frontend mapping body
swagger:model RemoveNamespaceFrontendMappingBody
*/
type RemoveNamespaceFrontendMappingBody struct {

	// frontend token
	FrontendToken string `json:"frontendToken,omitempty"`

	// namespace token
	NamespaceToken string `json:"namespaceToken,omitempty"`
}

// Validate validates this remove namespace frontend mapping body
func (o *RemoveNamespaceFrontendMappingBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this remove namespace frontend mapping body based on context it is used
func (o *RemoveNamespaceFrontendMappingBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RemoveNamespaceFrontendMappingBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RemoveNamespaceFrontendMappingBody) UnmarshalBinary(b []byte) error {
	var res RemoveNamespaceFrontendMappingBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
