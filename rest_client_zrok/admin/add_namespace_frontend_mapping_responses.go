// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AddNamespaceFrontendMappingReader is a Reader for the AddNamespaceFrontendMapping structure.
type AddNamespaceFrontendMappingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddNamespaceFrontendMappingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddNamespaceFrontendMappingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAddNamespaceFrontendMappingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddNamespaceFrontendMappingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddNamespaceFrontendMappingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /namespace/frontend/mapping] addNamespaceFrontendMapping", response, response.Code())
	}
}

// NewAddNamespaceFrontendMappingOK creates a AddNamespaceFrontendMappingOK with default headers values
func NewAddNamespaceFrontendMappingOK() *AddNamespaceFrontendMappingOK {
	return &AddNamespaceFrontendMappingOK{}
}

/*
AddNamespaceFrontendMappingOK describes a response with status code 200, with default header values.

namespace frontend mapping added
*/
type AddNamespaceFrontendMappingOK struct {
}

// IsSuccess returns true when this add namespace frontend mapping o k response has a 2xx status code
func (o *AddNamespaceFrontendMappingOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add namespace frontend mapping o k response has a 3xx status code
func (o *AddNamespaceFrontendMappingOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add namespace frontend mapping o k response has a 4xx status code
func (o *AddNamespaceFrontendMappingOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add namespace frontend mapping o k response has a 5xx status code
func (o *AddNamespaceFrontendMappingOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add namespace frontend mapping o k response a status code equal to that given
func (o *AddNamespaceFrontendMappingOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add namespace frontend mapping o k response
func (o *AddNamespaceFrontendMappingOK) Code() int {
	return 200
}

func (o *AddNamespaceFrontendMappingOK) Error() string {
	return fmt.Sprintf("[POST /namespace/frontend/mapping][%d] addNamespaceFrontendMappingOK ", 200)
}

func (o *AddNamespaceFrontendMappingOK) String() string {
	return fmt.Sprintf("[POST /namespace/frontend/mapping][%d] addNamespaceFrontendMappingOK ", 200)
}

func (o *AddNamespaceFrontendMappingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddNamespaceFrontendMappingUnauthorized creates a AddNamespaceFrontendMappingUnauthorized with default headers values
func NewAddNamespaceFrontendMappingUnauthorized() *AddNamespaceFrontendMappingUnauthorized {
	return &AddNamespaceFrontendMappingUnauthorized{}
}

/*
AddNamespaceFrontendMappingUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type AddNamespaceFrontendMappingUnauthorized struct {
}

// IsSuccess returns true when this add namespace frontend mapping unauthorized response has a 2xx status code
func (o *AddNamespaceFrontendMappingUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add namespace frontend mapping unauthorized response has a 3xx status code
func (o *AddNamespaceFrontendMappingUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add namespace frontend mapping unauthorized response has a 4xx status code
func (o *AddNamespaceFrontendMappingUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add namespace frontend mapping unauthorized response has a 5xx status code
func (o *AddNamespaceFrontendMappingUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add namespace frontend mapping unauthorized response a status code equal to that given
func (o *AddNamespaceFrontendMappingUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add namespace frontend mapping unauthorized response
func (o *AddNamespaceFrontendMappingUnauthorized) Code() int {
	return 401
}

func (o *AddNamespaceFrontendMappingUnauthorized) Error() string {
	return fmt.Sprintf("[POST /namespace/frontend/mapping][%d] addNamespaceFrontendMappingUnauthorized ", 401)
}

func (o *AddNamespaceFrontendMappingUnauthorized) String() string {
	return fmt.Sprintf("[POST /namespace/frontend/mapping][%d] addNamespaceFrontendMappingUnauthorized ", 401)
}

func (o *AddNamespaceFrontendMappingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddNamespaceFrontendMappingNotFound creates a AddNamespaceFrontendMappingNotFound with default headers values
func NewAddNamespaceFrontendMappingNotFound() *AddNamespaceFrontendMappingNotFound {
	return &AddNamespaceFrontendMappingNotFound{}
}

/*
AddNamespaceFrontendMappingNotFound describes a response with status code 404, with default header values.

not found
*/
type AddNamespaceFrontendMappingNotFound struct {
}

// IsSuccess returns true when this add namespace frontend mapping not found response has a 2xx status code
func (o *AddNamespaceFrontendMappingNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add namespace frontend mapping not found response has a 3xx status code
func (o *AddNamespaceFrontendMappingNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add namespace frontend mapping not found response has a 4xx status code
func (o *AddNamespaceFrontendMappingNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add namespace frontend mapping not found response has a 5xx status code
func (o *AddNamespaceFrontendMappingNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add namespace frontend mapping not found response a status code equal to that given
func (o *AddNamespaceFrontendMappingNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add namespace frontend mapping not found response
func (o *AddNamespaceFrontendMappingNotFound) Code() int {
	return 404
}

func (o *AddNamespaceFrontendMappingNotFound) Error() string {
	return fmt.Sprintf("[POST /namespace/frontend/mapping][%d] addNamespaceFrontendMappingNotFound ", 404)
}

func (o *AddNamespaceFrontendMappingNotFound) String() string {
	return fmt.Sprintf("[POST /namespace/frontend/mapping][%d] addNamespaceFrontendMappingNotFound ", 404)
}

func (o *AddNamespaceFrontendMappingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddNamespaceFrontendMappingInternalServerError creates a AddNamespaceFrontendMappingInternalServerError with default headers values
func NewAddNamespaceFrontendMappingInternalServerError() *AddNamespaceFrontendMappingInternalServerError {
	return &AddNamespaceFrontendMappingInternalServerError{}
}

/*
AddNamespaceFrontendMappingInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type AddNamespaceFrontendMappingInternalServerError struct {
}

// IsSuccess returns true when this add namespace frontend mapping internal server error response has a 2xx status code
func (o *AddNamespaceFrontendMappingInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add namespace frontend mapping internal server error response has a 3xx status code
func (o *AddNamespaceFrontendMappingInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add namespace frontend mapping internal server error response has a 4xx status code
func (o *AddNamespaceFrontendMappingInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add namespace frontend mapping internal server error response has a 5xx status code
func (o *AddNamespaceFrontendMappingInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add namespace frontend mapping internal server error response a status code equal to that given
func (o *AddNamespaceFrontendMappingInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add namespace frontend mapping internal server error response
func (o *AddNamespaceFrontendMappingInternalServerError) Code() int {
	return 500
}

func (o *AddNamespaceFrontendMappingInternalServerError) Error() string {
	return fmt.Sprintf("[POST /namespace/frontend/mapping][%d] addNamespaceFrontendMappingInternalServerError ", 500)
}

func (o *AddNamespaceFrontendMappingInternalServerError) String() string {
	return fmt.Sprintf("[POST /namespace/frontend/mapping][%d] addNamespaceFrontendMappingInternalServerError ", 500)
}

func (o *AddNamespaceFrontendMappingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
AddNamespaceFrontendMappingBody add namespace frontend mapping body
swagger:model AddNamespaceFrontendMappingBody
*/
type AddNamespaceFrontendMappingBody struct {

	// frontend token
	FrontendToken string `json:"frontendToken,omitempty"`

	// is default
	IsDefault bool `json:"isDefault,omitempty"`

	// namespace token
	NamespaceToken string `json:"namespaceToken,omitempty"`
}

// Validate validates this add namespace frontend mapping body
func (o *AddNamespaceFrontendMappingBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this add namespace frontend mapping body based on context it is used
func (o *AddNamespaceFrontendMappingBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AddNamespaceFrontendMappingBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AddNamespaceFrontendMappingBody) UnmarshalBinary(b []byte) error {
	var res AddNamespaceFrontendMappingBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
