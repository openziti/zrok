// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AddNamespaceGrantReader is a Reader for the AddNamespaceGrant structure.
type AddNamespaceGrantReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddNamespaceGrantReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddNamespaceGrantOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAddNamespaceGrantUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddNamespaceGrantNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddNamespaceGrantInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /namespace/grant] addNamespaceGrant", response, response.Code())
	}
}

// NewAddNamespaceGrantOK creates a AddNamespaceGrantOK with default headers values
func NewAddNamespaceGrantOK() *AddNamespaceGrantOK {
	return &AddNamespaceGrantOK{}
}

/*
AddNamespaceGrantOK describes a response with status code 200, with default header values.

namespace grant added
*/
type AddNamespaceGrantOK struct {
}

// IsSuccess returns true when this add namespace grant o k response has a 2xx status code
func (o *AddNamespaceGrantOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add namespace grant o k response has a 3xx status code
func (o *AddNamespaceGrantOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add namespace grant o k response has a 4xx status code
func (o *AddNamespaceGrantOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add namespace grant o k response has a 5xx status code
func (o *AddNamespaceGrantOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add namespace grant o k response a status code equal to that given
func (o *AddNamespaceGrantOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add namespace grant o k response
func (o *AddNamespaceGrantOK) Code() int {
	return 200
}

func (o *AddNamespaceGrantOK) Error() string {
	return fmt.Sprintf("[POST /namespace/grant][%d] addNamespaceGrantOK ", 200)
}

func (o *AddNamespaceGrantOK) String() string {
	return fmt.Sprintf("[POST /namespace/grant][%d] addNamespaceGrantOK ", 200)
}

func (o *AddNamespaceGrantOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddNamespaceGrantUnauthorized creates a AddNamespaceGrantUnauthorized with default headers values
func NewAddNamespaceGrantUnauthorized() *AddNamespaceGrantUnauthorized {
	return &AddNamespaceGrantUnauthorized{}
}

/*
AddNamespaceGrantUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type AddNamespaceGrantUnauthorized struct {
}

// IsSuccess returns true when this add namespace grant unauthorized response has a 2xx status code
func (o *AddNamespaceGrantUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add namespace grant unauthorized response has a 3xx status code
func (o *AddNamespaceGrantUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add namespace grant unauthorized response has a 4xx status code
func (o *AddNamespaceGrantUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add namespace grant unauthorized response has a 5xx status code
func (o *AddNamespaceGrantUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add namespace grant unauthorized response a status code equal to that given
func (o *AddNamespaceGrantUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add namespace grant unauthorized response
func (o *AddNamespaceGrantUnauthorized) Code() int {
	return 401
}

func (o *AddNamespaceGrantUnauthorized) Error() string {
	return fmt.Sprintf("[POST /namespace/grant][%d] addNamespaceGrantUnauthorized ", 401)
}

func (o *AddNamespaceGrantUnauthorized) String() string {
	return fmt.Sprintf("[POST /namespace/grant][%d] addNamespaceGrantUnauthorized ", 401)
}

func (o *AddNamespaceGrantUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddNamespaceGrantNotFound creates a AddNamespaceGrantNotFound with default headers values
func NewAddNamespaceGrantNotFound() *AddNamespaceGrantNotFound {
	return &AddNamespaceGrantNotFound{}
}

/*
AddNamespaceGrantNotFound describes a response with status code 404, with default header values.

not found
*/
type AddNamespaceGrantNotFound struct {
}

// IsSuccess returns true when this add namespace grant not found response has a 2xx status code
func (o *AddNamespaceGrantNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add namespace grant not found response has a 3xx status code
func (o *AddNamespaceGrantNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add namespace grant not found response has a 4xx status code
func (o *AddNamespaceGrantNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add namespace grant not found response has a 5xx status code
func (o *AddNamespaceGrantNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add namespace grant not found response a status code equal to that given
func (o *AddNamespaceGrantNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add namespace grant not found response
func (o *AddNamespaceGrantNotFound) Code() int {
	return 404
}

func (o *AddNamespaceGrantNotFound) Error() string {
	return fmt.Sprintf("[POST /namespace/grant][%d] addNamespaceGrantNotFound ", 404)
}

func (o *AddNamespaceGrantNotFound) String() string {
	return fmt.Sprintf("[POST /namespace/grant][%d] addNamespaceGrantNotFound ", 404)
}

func (o *AddNamespaceGrantNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddNamespaceGrantInternalServerError creates a AddNamespaceGrantInternalServerError with default headers values
func NewAddNamespaceGrantInternalServerError() *AddNamespaceGrantInternalServerError {
	return &AddNamespaceGrantInternalServerError{}
}

/*
AddNamespaceGrantInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type AddNamespaceGrantInternalServerError struct {
}

// IsSuccess returns true when this add namespace grant internal server error response has a 2xx status code
func (o *AddNamespaceGrantInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add namespace grant internal server error response has a 3xx status code
func (o *AddNamespaceGrantInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add namespace grant internal server error response has a 4xx status code
func (o *AddNamespaceGrantInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add namespace grant internal server error response has a 5xx status code
func (o *AddNamespaceGrantInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add namespace grant internal server error response a status code equal to that given
func (o *AddNamespaceGrantInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add namespace grant internal server error response
func (o *AddNamespaceGrantInternalServerError) Code() int {
	return 500
}

func (o *AddNamespaceGrantInternalServerError) Error() string {
	return fmt.Sprintf("[POST /namespace/grant][%d] addNamespaceGrantInternalServerError ", 500)
}

func (o *AddNamespaceGrantInternalServerError) String() string {
	return fmt.Sprintf("[POST /namespace/grant][%d] addNamespaceGrantInternalServerError ", 500)
}

func (o *AddNamespaceGrantInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
AddNamespaceGrantBody add namespace grant body
swagger:model AddNamespaceGrantBody
*/
type AddNamespaceGrantBody struct {

	// email
	Email string `json:"email,omitempty"`

	// namespace token
	NamespaceToken string `json:"namespaceToken,omitempty"`
}

// Validate validates this add namespace grant body
func (o *AddNamespaceGrantBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this add namespace grant body based on context it is used
func (o *AddNamespaceGrantBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AddNamespaceGrantBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AddNamespaceGrantBody) UnmarshalBinary(b []byte) error {
	var res AddNamespaceGrantBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
