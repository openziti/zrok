// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ListFrontendNamespaceMappingsReader is a Reader for the ListFrontendNamespaceMappings structure.
type ListFrontendNamespaceMappingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListFrontendNamespaceMappingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListFrontendNamespaceMappingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListFrontendNamespaceMappingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListFrontendNamespaceMappingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListFrontendNamespaceMappingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /frontend/namespace/mapping/{frontendToken}] listFrontendNamespaceMappings", response, response.Code())
	}
}

// NewListFrontendNamespaceMappingsOK creates a ListFrontendNamespaceMappingsOK with default headers values
func NewListFrontendNamespaceMappingsOK() *ListFrontendNamespaceMappingsOK {
	return &ListFrontendNamespaceMappingsOK{}
}

/*
ListFrontendNamespaceMappingsOK describes a response with status code 200, with default header values.

frontend namespace mappings listed
*/
type ListFrontendNamespaceMappingsOK struct {
	Payload []*ListFrontendNamespaceMappingsOKBodyItems0
}

// IsSuccess returns true when this list frontend namespace mappings o k response has a 2xx status code
func (o *ListFrontendNamespaceMappingsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list frontend namespace mappings o k response has a 3xx status code
func (o *ListFrontendNamespaceMappingsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list frontend namespace mappings o k response has a 4xx status code
func (o *ListFrontendNamespaceMappingsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list frontend namespace mappings o k response has a 5xx status code
func (o *ListFrontendNamespaceMappingsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list frontend namespace mappings o k response a status code equal to that given
func (o *ListFrontendNamespaceMappingsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list frontend namespace mappings o k response
func (o *ListFrontendNamespaceMappingsOK) Code() int {
	return 200
}

func (o *ListFrontendNamespaceMappingsOK) Error() string {
	return fmt.Sprintf("[GET /frontend/namespace/mapping/{frontendToken}][%d] listFrontendNamespaceMappingsOK  %+v", 200, o.Payload)
}

func (o *ListFrontendNamespaceMappingsOK) String() string {
	return fmt.Sprintf("[GET /frontend/namespace/mapping/{frontendToken}][%d] listFrontendNamespaceMappingsOK  %+v", 200, o.Payload)
}

func (o *ListFrontendNamespaceMappingsOK) GetPayload() []*ListFrontendNamespaceMappingsOKBodyItems0 {
	return o.Payload
}

func (o *ListFrontendNamespaceMappingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListFrontendNamespaceMappingsUnauthorized creates a ListFrontendNamespaceMappingsUnauthorized with default headers values
func NewListFrontendNamespaceMappingsUnauthorized() *ListFrontendNamespaceMappingsUnauthorized {
	return &ListFrontendNamespaceMappingsUnauthorized{}
}

/*
ListFrontendNamespaceMappingsUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type ListFrontendNamespaceMappingsUnauthorized struct {
}

// IsSuccess returns true when this list frontend namespace mappings unauthorized response has a 2xx status code
func (o *ListFrontendNamespaceMappingsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list frontend namespace mappings unauthorized response has a 3xx status code
func (o *ListFrontendNamespaceMappingsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list frontend namespace mappings unauthorized response has a 4xx status code
func (o *ListFrontendNamespaceMappingsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list frontend namespace mappings unauthorized response has a 5xx status code
func (o *ListFrontendNamespaceMappingsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list frontend namespace mappings unauthorized response a status code equal to that given
func (o *ListFrontendNamespaceMappingsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list frontend namespace mappings unauthorized response
func (o *ListFrontendNamespaceMappingsUnauthorized) Code() int {
	return 401
}

func (o *ListFrontendNamespaceMappingsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /frontend/namespace/mapping/{frontendToken}][%d] listFrontendNamespaceMappingsUnauthorized ", 401)
}

func (o *ListFrontendNamespaceMappingsUnauthorized) String() string {
	return fmt.Sprintf("[GET /frontend/namespace/mapping/{frontendToken}][%d] listFrontendNamespaceMappingsUnauthorized ", 401)
}

func (o *ListFrontendNamespaceMappingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListFrontendNamespaceMappingsNotFound creates a ListFrontendNamespaceMappingsNotFound with default headers values
func NewListFrontendNamespaceMappingsNotFound() *ListFrontendNamespaceMappingsNotFound {
	return &ListFrontendNamespaceMappingsNotFound{}
}

/*
ListFrontendNamespaceMappingsNotFound describes a response with status code 404, with default header values.

frontend not found
*/
type ListFrontendNamespaceMappingsNotFound struct {
}

// IsSuccess returns true when this list frontend namespace mappings not found response has a 2xx status code
func (o *ListFrontendNamespaceMappingsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list frontend namespace mappings not found response has a 3xx status code
func (o *ListFrontendNamespaceMappingsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list frontend namespace mappings not found response has a 4xx status code
func (o *ListFrontendNamespaceMappingsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list frontend namespace mappings not found response has a 5xx status code
func (o *ListFrontendNamespaceMappingsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list frontend namespace mappings not found response a status code equal to that given
func (o *ListFrontendNamespaceMappingsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list frontend namespace mappings not found response
func (o *ListFrontendNamespaceMappingsNotFound) Code() int {
	return 404
}

func (o *ListFrontendNamespaceMappingsNotFound) Error() string {
	return fmt.Sprintf("[GET /frontend/namespace/mapping/{frontendToken}][%d] listFrontendNamespaceMappingsNotFound ", 404)
}

func (o *ListFrontendNamespaceMappingsNotFound) String() string {
	return fmt.Sprintf("[GET /frontend/namespace/mapping/{frontendToken}][%d] listFrontendNamespaceMappingsNotFound ", 404)
}

func (o *ListFrontendNamespaceMappingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListFrontendNamespaceMappingsInternalServerError creates a ListFrontendNamespaceMappingsInternalServerError with default headers values
func NewListFrontendNamespaceMappingsInternalServerError() *ListFrontendNamespaceMappingsInternalServerError {
	return &ListFrontendNamespaceMappingsInternalServerError{}
}

/*
ListFrontendNamespaceMappingsInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type ListFrontendNamespaceMappingsInternalServerError struct {
}

// IsSuccess returns true when this list frontend namespace mappings internal server error response has a 2xx status code
func (o *ListFrontendNamespaceMappingsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list frontend namespace mappings internal server error response has a 3xx status code
func (o *ListFrontendNamespaceMappingsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list frontend namespace mappings internal server error response has a 4xx status code
func (o *ListFrontendNamespaceMappingsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list frontend namespace mappings internal server error response has a 5xx status code
func (o *ListFrontendNamespaceMappingsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list frontend namespace mappings internal server error response a status code equal to that given
func (o *ListFrontendNamespaceMappingsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list frontend namespace mappings internal server error response
func (o *ListFrontendNamespaceMappingsInternalServerError) Code() int {
	return 500
}

func (o *ListFrontendNamespaceMappingsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /frontend/namespace/mapping/{frontendToken}][%d] listFrontendNamespaceMappingsInternalServerError ", 500)
}

func (o *ListFrontendNamespaceMappingsInternalServerError) String() string {
	return fmt.Sprintf("[GET /frontend/namespace/mapping/{frontendToken}][%d] listFrontendNamespaceMappingsInternalServerError ", 500)
}

func (o *ListFrontendNamespaceMappingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
ListFrontendNamespaceMappingsOKBodyItems0 list frontend namespace mappings o k body items0
swagger:model ListFrontendNamespaceMappingsOKBodyItems0
*/
type ListFrontendNamespaceMappingsOKBodyItems0 struct {

	// created at
	CreatedAt int64 `json:"createdAt,omitempty"`

	// frontend token
	FrontendToken string `json:"frontendToken,omitempty"`

	// is default
	IsDefault bool `json:"isDefault,omitempty"`

	// namespace token
	NamespaceToken string `json:"namespaceToken,omitempty"`
}

// Validate validates this list frontend namespace mappings o k body items0
func (o *ListFrontendNamespaceMappingsOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list frontend namespace mappings o k body items0 based on context it is used
func (o *ListFrontendNamespaceMappingsOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListFrontendNamespaceMappingsOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListFrontendNamespaceMappingsOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res ListFrontendNamespaceMappingsOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
