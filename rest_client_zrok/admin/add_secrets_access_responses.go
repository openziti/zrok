// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AddSecretsAccessReader is a Reader for the AddSecretsAccess structure.
type AddSecretsAccessReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddSecretsAccessReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddSecretsAccessOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddSecretsAccessBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddSecretsAccessUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddSecretsAccessInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /secrets/access] addSecretsAccess", response, response.Code())
	}
}

// NewAddSecretsAccessOK creates a AddSecretsAccessOK with default headers values
func NewAddSecretsAccessOK() *AddSecretsAccessOK {
	return &AddSecretsAccessOK{}
}

/*
AddSecretsAccessOK describes a response with status code 200, with default header values.

ok
*/
type AddSecretsAccessOK struct {
}

// IsSuccess returns true when this add secrets access o k response has a 2xx status code
func (o *AddSecretsAccessOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add secrets access o k response has a 3xx status code
func (o *AddSecretsAccessOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add secrets access o k response has a 4xx status code
func (o *AddSecretsAccessOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add secrets access o k response has a 5xx status code
func (o *AddSecretsAccessOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add secrets access o k response a status code equal to that given
func (o *AddSecretsAccessOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add secrets access o k response
func (o *AddSecretsAccessOK) Code() int {
	return 200
}

func (o *AddSecretsAccessOK) Error() string {
	return fmt.Sprintf("[POST /secrets/access][%d] addSecretsAccessOK ", 200)
}

func (o *AddSecretsAccessOK) String() string {
	return fmt.Sprintf("[POST /secrets/access][%d] addSecretsAccessOK ", 200)
}

func (o *AddSecretsAccessOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddSecretsAccessBadRequest creates a AddSecretsAccessBadRequest with default headers values
func NewAddSecretsAccessBadRequest() *AddSecretsAccessBadRequest {
	return &AddSecretsAccessBadRequest{}
}

/*
AddSecretsAccessBadRequest describes a response with status code 400, with default header values.

access not added
*/
type AddSecretsAccessBadRequest struct {
}

// IsSuccess returns true when this add secrets access bad request response has a 2xx status code
func (o *AddSecretsAccessBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add secrets access bad request response has a 3xx status code
func (o *AddSecretsAccessBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add secrets access bad request response has a 4xx status code
func (o *AddSecretsAccessBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add secrets access bad request response has a 5xx status code
func (o *AddSecretsAccessBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add secrets access bad request response a status code equal to that given
func (o *AddSecretsAccessBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add secrets access bad request response
func (o *AddSecretsAccessBadRequest) Code() int {
	return 400
}

func (o *AddSecretsAccessBadRequest) Error() string {
	return fmt.Sprintf("[POST /secrets/access][%d] addSecretsAccessBadRequest ", 400)
}

func (o *AddSecretsAccessBadRequest) String() string {
	return fmt.Sprintf("[POST /secrets/access][%d] addSecretsAccessBadRequest ", 400)
}

func (o *AddSecretsAccessBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddSecretsAccessUnauthorized creates a AddSecretsAccessUnauthorized with default headers values
func NewAddSecretsAccessUnauthorized() *AddSecretsAccessUnauthorized {
	return &AddSecretsAccessUnauthorized{}
}

/*
AddSecretsAccessUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type AddSecretsAccessUnauthorized struct {
}

// IsSuccess returns true when this add secrets access unauthorized response has a 2xx status code
func (o *AddSecretsAccessUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add secrets access unauthorized response has a 3xx status code
func (o *AddSecretsAccessUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add secrets access unauthorized response has a 4xx status code
func (o *AddSecretsAccessUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add secrets access unauthorized response has a 5xx status code
func (o *AddSecretsAccessUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add secrets access unauthorized response a status code equal to that given
func (o *AddSecretsAccessUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add secrets access unauthorized response
func (o *AddSecretsAccessUnauthorized) Code() int {
	return 401
}

func (o *AddSecretsAccessUnauthorized) Error() string {
	return fmt.Sprintf("[POST /secrets/access][%d] addSecretsAccessUnauthorized ", 401)
}

func (o *AddSecretsAccessUnauthorized) String() string {
	return fmt.Sprintf("[POST /secrets/access][%d] addSecretsAccessUnauthorized ", 401)
}

func (o *AddSecretsAccessUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddSecretsAccessInternalServerError creates a AddSecretsAccessInternalServerError with default headers values
func NewAddSecretsAccessInternalServerError() *AddSecretsAccessInternalServerError {
	return &AddSecretsAccessInternalServerError{}
}

/*
AddSecretsAccessInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type AddSecretsAccessInternalServerError struct {
}

// IsSuccess returns true when this add secrets access internal server error response has a 2xx status code
func (o *AddSecretsAccessInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add secrets access internal server error response has a 3xx status code
func (o *AddSecretsAccessInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add secrets access internal server error response has a 4xx status code
func (o *AddSecretsAccessInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add secrets access internal server error response has a 5xx status code
func (o *AddSecretsAccessInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add secrets access internal server error response a status code equal to that given
func (o *AddSecretsAccessInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add secrets access internal server error response
func (o *AddSecretsAccessInternalServerError) Code() int {
	return 500
}

func (o *AddSecretsAccessInternalServerError) Error() string {
	return fmt.Sprintf("[POST /secrets/access][%d] addSecretsAccessInternalServerError ", 500)
}

func (o *AddSecretsAccessInternalServerError) String() string {
	return fmt.Sprintf("[POST /secrets/access][%d] addSecretsAccessInternalServerError ", 500)
}

func (o *AddSecretsAccessInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
AddSecretsAccessBody add secrets access body
swagger:model AddSecretsAccessBody
*/
type AddSecretsAccessBody struct {

	// secrets access identity z Id
	SecretsAccessIdentityZID string `json:"secretsAccessIdentityZId,omitempty"`
}

// Validate validates this add secrets access body
func (o *AddSecretsAccessBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this add secrets access body based on context it is used
func (o *AddSecretsAccessBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AddSecretsAccessBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AddSecretsAccessBody) UnmarshalBinary(b []byte) error {
	var res AddSecretsAccessBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
