// Code generated by go-swagger; DO NOT EDIT.

package share

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ListNamesForNamespaceReader is a Reader for the ListNamesForNamespace structure.
type ListNamesForNamespaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListNamesForNamespaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListNamesForNamespaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListNamesForNamespaceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListNamesForNamespaceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListNamesForNamespaceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /share/names/{namespaceToken}] listNamesForNamespace", response, response.Code())
	}
}

// NewListNamesForNamespaceOK creates a ListNamesForNamespaceOK with default headers values
func NewListNamesForNamespaceOK() *ListNamesForNamespaceOK {
	return &ListNamesForNamespaceOK{}
}

/*
ListNamesForNamespaceOK describes a response with status code 200, with default header values.

ok
*/
type ListNamesForNamespaceOK struct {
	Payload []*ListNamesForNamespaceOKBodyItems0
}

// IsSuccess returns true when this list names for namespace o k response has a 2xx status code
func (o *ListNamesForNamespaceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list names for namespace o k response has a 3xx status code
func (o *ListNamesForNamespaceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list names for namespace o k response has a 4xx status code
func (o *ListNamesForNamespaceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list names for namespace o k response has a 5xx status code
func (o *ListNamesForNamespaceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list names for namespace o k response a status code equal to that given
func (o *ListNamesForNamespaceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list names for namespace o k response
func (o *ListNamesForNamespaceOK) Code() int {
	return 200
}

func (o *ListNamesForNamespaceOK) Error() string {
	return fmt.Sprintf("[GET /share/names/{namespaceToken}][%d] listNamesForNamespaceOK  %+v", 200, o.Payload)
}

func (o *ListNamesForNamespaceOK) String() string {
	return fmt.Sprintf("[GET /share/names/{namespaceToken}][%d] listNamesForNamespaceOK  %+v", 200, o.Payload)
}

func (o *ListNamesForNamespaceOK) GetPayload() []*ListNamesForNamespaceOKBodyItems0 {
	return o.Payload
}

func (o *ListNamesForNamespaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListNamesForNamespaceUnauthorized creates a ListNamesForNamespaceUnauthorized with default headers values
func NewListNamesForNamespaceUnauthorized() *ListNamesForNamespaceUnauthorized {
	return &ListNamesForNamespaceUnauthorized{}
}

/*
ListNamesForNamespaceUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type ListNamesForNamespaceUnauthorized struct {
}

// IsSuccess returns true when this list names for namespace unauthorized response has a 2xx status code
func (o *ListNamesForNamespaceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list names for namespace unauthorized response has a 3xx status code
func (o *ListNamesForNamespaceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list names for namespace unauthorized response has a 4xx status code
func (o *ListNamesForNamespaceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list names for namespace unauthorized response has a 5xx status code
func (o *ListNamesForNamespaceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list names for namespace unauthorized response a status code equal to that given
func (o *ListNamesForNamespaceUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list names for namespace unauthorized response
func (o *ListNamesForNamespaceUnauthorized) Code() int {
	return 401
}

func (o *ListNamesForNamespaceUnauthorized) Error() string {
	return fmt.Sprintf("[GET /share/names/{namespaceToken}][%d] listNamesForNamespaceUnauthorized ", 401)
}

func (o *ListNamesForNamespaceUnauthorized) String() string {
	return fmt.Sprintf("[GET /share/names/{namespaceToken}][%d] listNamesForNamespaceUnauthorized ", 401)
}

func (o *ListNamesForNamespaceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListNamesForNamespaceNotFound creates a ListNamesForNamespaceNotFound with default headers values
func NewListNamesForNamespaceNotFound() *ListNamesForNamespaceNotFound {
	return &ListNamesForNamespaceNotFound{}
}

/*
ListNamesForNamespaceNotFound describes a response with status code 404, with default header values.

namespace not found
*/
type ListNamesForNamespaceNotFound struct {
}

// IsSuccess returns true when this list names for namespace not found response has a 2xx status code
func (o *ListNamesForNamespaceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list names for namespace not found response has a 3xx status code
func (o *ListNamesForNamespaceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list names for namespace not found response has a 4xx status code
func (o *ListNamesForNamespaceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list names for namespace not found response has a 5xx status code
func (o *ListNamesForNamespaceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list names for namespace not found response a status code equal to that given
func (o *ListNamesForNamespaceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list names for namespace not found response
func (o *ListNamesForNamespaceNotFound) Code() int {
	return 404
}

func (o *ListNamesForNamespaceNotFound) Error() string {
	return fmt.Sprintf("[GET /share/names/{namespaceToken}][%d] listNamesForNamespaceNotFound ", 404)
}

func (o *ListNamesForNamespaceNotFound) String() string {
	return fmt.Sprintf("[GET /share/names/{namespaceToken}][%d] listNamesForNamespaceNotFound ", 404)
}

func (o *ListNamesForNamespaceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListNamesForNamespaceInternalServerError creates a ListNamesForNamespaceInternalServerError with default headers values
func NewListNamesForNamespaceInternalServerError() *ListNamesForNamespaceInternalServerError {
	return &ListNamesForNamespaceInternalServerError{}
}

/*
ListNamesForNamespaceInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type ListNamesForNamespaceInternalServerError struct {
}

// IsSuccess returns true when this list names for namespace internal server error response has a 2xx status code
func (o *ListNamesForNamespaceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list names for namespace internal server error response has a 3xx status code
func (o *ListNamesForNamespaceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list names for namespace internal server error response has a 4xx status code
func (o *ListNamesForNamespaceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list names for namespace internal server error response has a 5xx status code
func (o *ListNamesForNamespaceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list names for namespace internal server error response a status code equal to that given
func (o *ListNamesForNamespaceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list names for namespace internal server error response
func (o *ListNamesForNamespaceInternalServerError) Code() int {
	return 500
}

func (o *ListNamesForNamespaceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /share/names/{namespaceToken}][%d] listNamesForNamespaceInternalServerError ", 500)
}

func (o *ListNamesForNamespaceInternalServerError) String() string {
	return fmt.Sprintf("[GET /share/names/{namespaceToken}][%d] listNamesForNamespaceInternalServerError ", 500)
}

func (o *ListNamesForNamespaceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
ListNamesForNamespaceOKBodyItems0 list names for namespace o k body items0
swagger:model ListNamesForNamespaceOKBodyItems0
*/
type ListNamesForNamespaceOKBodyItems0 struct {

	// created at
	CreatedAt int64 `json:"createdAt,omitempty"`

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this list names for namespace o k body items0
func (o *ListNamesForNamespaceOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list names for namespace o k body items0 based on context it is used
func (o *ListNamesForNamespaceOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListNamesForNamespaceOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListNamesForNamespaceOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res ListNamesForNamespaceOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
