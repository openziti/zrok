// Code generated by go-swagger; DO NOT EDIT.

package share

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ListAllShareNamesReader is a Reader for the ListAllShareNames structure.
type ListAllShareNamesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAllShareNamesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListAllShareNamesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListAllShareNamesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListAllShareNamesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /share/names] listAllShareNames", response, response.Code())
	}
}

// NewListAllShareNamesOK creates a ListAllShareNamesOK with default headers values
func NewListAllShareNamesOK() *ListAllShareNamesOK {
	return &ListAllShareNamesOK{}
}

/*
ListAllShareNamesOK describes a response with status code 200, with default header values.

ok
*/
type ListAllShareNamesOK struct {
	Payload []*ListAllShareNamesOKBodyItems0
}

// IsSuccess returns true when this list all share names o k response has a 2xx status code
func (o *ListAllShareNamesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list all share names o k response has a 3xx status code
func (o *ListAllShareNamesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list all share names o k response has a 4xx status code
func (o *ListAllShareNamesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list all share names o k response has a 5xx status code
func (o *ListAllShareNamesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list all share names o k response a status code equal to that given
func (o *ListAllShareNamesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list all share names o k response
func (o *ListAllShareNamesOK) Code() int {
	return 200
}

func (o *ListAllShareNamesOK) Error() string {
	return fmt.Sprintf("[GET /share/names][%d] listAllShareNamesOK  %+v", 200, o.Payload)
}

func (o *ListAllShareNamesOK) String() string {
	return fmt.Sprintf("[GET /share/names][%d] listAllShareNamesOK  %+v", 200, o.Payload)
}

func (o *ListAllShareNamesOK) GetPayload() []*ListAllShareNamesOKBodyItems0 {
	return o.Payload
}

func (o *ListAllShareNamesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAllShareNamesUnauthorized creates a ListAllShareNamesUnauthorized with default headers values
func NewListAllShareNamesUnauthorized() *ListAllShareNamesUnauthorized {
	return &ListAllShareNamesUnauthorized{}
}

/*
ListAllShareNamesUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type ListAllShareNamesUnauthorized struct {
}

// IsSuccess returns true when this list all share names unauthorized response has a 2xx status code
func (o *ListAllShareNamesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list all share names unauthorized response has a 3xx status code
func (o *ListAllShareNamesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list all share names unauthorized response has a 4xx status code
func (o *ListAllShareNamesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list all share names unauthorized response has a 5xx status code
func (o *ListAllShareNamesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list all share names unauthorized response a status code equal to that given
func (o *ListAllShareNamesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list all share names unauthorized response
func (o *ListAllShareNamesUnauthorized) Code() int {
	return 401
}

func (o *ListAllShareNamesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /share/names][%d] listAllShareNamesUnauthorized ", 401)
}

func (o *ListAllShareNamesUnauthorized) String() string {
	return fmt.Sprintf("[GET /share/names][%d] listAllShareNamesUnauthorized ", 401)
}

func (o *ListAllShareNamesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListAllShareNamesInternalServerError creates a ListAllShareNamesInternalServerError with default headers values
func NewListAllShareNamesInternalServerError() *ListAllShareNamesInternalServerError {
	return &ListAllShareNamesInternalServerError{}
}

/*
ListAllShareNamesInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type ListAllShareNamesInternalServerError struct {
}

// IsSuccess returns true when this list all share names internal server error response has a 2xx status code
func (o *ListAllShareNamesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list all share names internal server error response has a 3xx status code
func (o *ListAllShareNamesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list all share names internal server error response has a 4xx status code
func (o *ListAllShareNamesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list all share names internal server error response has a 5xx status code
func (o *ListAllShareNamesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list all share names internal server error response a status code equal to that given
func (o *ListAllShareNamesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list all share names internal server error response
func (o *ListAllShareNamesInternalServerError) Code() int {
	return 500
}

func (o *ListAllShareNamesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /share/names][%d] listAllShareNamesInternalServerError ", 500)
}

func (o *ListAllShareNamesInternalServerError) String() string {
	return fmt.Sprintf("[GET /share/names][%d] listAllShareNamesInternalServerError ", 500)
}

func (o *ListAllShareNamesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
ListAllShareNamesOKBodyItems0 list all share names o k body items0
swagger:model ListAllShareNamesOKBodyItems0
*/
type ListAllShareNamesOKBodyItems0 struct {

	// created at
	CreatedAt int64 `json:"createdAt,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// namespace name
	NamespaceName string `json:"namespaceName,omitempty"`

	// namespace token
	NamespaceToken string `json:"namespaceToken,omitempty"`
}

// Validate validates this list all share names o k body items0
func (o *ListAllShareNamesOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list all share names o k body items0 based on context it is used
func (o *ListAllShareNamesOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListAllShareNamesOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListAllShareNamesOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res ListAllShareNamesOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
