"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4277],{5269:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"concepts/sharing-reserved","title":"Reserved Shares","description":"By default, a public or private share is assigned a share token when you create a share using the zrok share command. The zrok share command is the bridge between your local environment and the users you are sharing with. When you terminate the zrok share, the bridge is eliminated and the share token is deleted. If you run zrok share again, you will be allocated a brand new share token.","source":"@site/versioned_docs/version-0.4/concepts/sharing-reserved.md","sourceDirName":"concepts","slug":"/concepts/sharing-reserved","permalink":"/docs/concepts/sharing-reserved","draft":false,"unlisted":false,"editUrl":"https://github.com/openziti/zrok/blob/main/docs/versioned_docs/version-0.4/concepts/sharing-reserved.md","tags":[],"version":"0.4","sidebarPosition":10,"frontMatter":{"sidebar_position":10},"sidebar":"tutorialSidebar","previous":{"title":"Public Shares","permalink":"/docs/concepts/sharing-public"},"next":{"title":"Sharing HTTP Servers","permalink":"/docs/concepts/http"}}');var o=s(4848),t=s(8453);const a={sidebar_position:10},i="Reserved Shares",d={},h=[{value:"Unique Names",id:"unique-names",level:2}];function c(e){const r={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"reserved-shares",children:"Reserved Shares"})}),"\n",(0,o.jsxs)(r.p,{children:["By default, a ",(0,o.jsx)(r.code,{children:"public"})," or ",(0,o.jsx)(r.code,{children:"private"})," share is assigned a ",(0,o.jsx)(r.em,{children:"share token"})," when you create a share using the ",(0,o.jsx)(r.code,{children:"zrok share"})," command. The ",(0,o.jsx)(r.code,{children:"zrok share"})," command is the bridge between your local environment and the users you are sharing with. When you terminate the ",(0,o.jsx)(r.code,{children:"zrok share"}),", the bridge is eliminated and the ",(0,o.jsx)(r.em,{children:"share token"})," is deleted. If you run ",(0,o.jsx)(r.code,{children:"zrok share"})," again, you will be allocated a brand new ",(0,o.jsx)(r.em,{children:"share token"}),"."]}),"\n",(0,o.jsxs)(r.p,{children:["You can use a ",(0,o.jsx)(r.code,{children:"reserved"})," share to persist your ",(0,o.jsx)(r.em,{children:"share token"})," across multiple runs of the ",(0,o.jsx)(r.code,{children:"zrok share"})," bridge. When you use a ",(0,o.jsx)(r.code,{children:"reserved"})," share, the share token will not be deleted between multiple runs of ",(0,o.jsx)(r.code,{children:"zrok share"}),"."]}),"\n",(0,o.jsxs)(r.p,{children:["To use a ",(0,o.jsx)(r.code,{children:"reserved"})," share, you will first run the ",(0,o.jsx)(r.code,{children:"zrok reserve"})," command to create the reserved share (see ",(0,o.jsx)(r.code,{children:"zrok reserve --help"})," for details). Once you've created your ",(0,o.jsx)(r.code,{children:"reserved"})," share, you will use the ",(0,o.jsx)(r.code,{children:"zrok share reserved"})," command (see ",(0,o.jsx)(r.code,{children:"--help"})," for details) to run the bridge for the shared resource."]}),"\n",(0,o.jsxs)(r.p,{children:["This pattern works for both ",(0,o.jsx)(r.code,{children:"public"})," and ",(0,o.jsx)(r.code,{children:"private"})," shares, and for all resource types supported by ",(0,o.jsx)(r.code,{children:"zrok"}),"."]}),"\n",(0,o.jsxs)(r.p,{children:["To delete your ",(0,o.jsx)(r.code,{children:"reserved"})," share use the ",(0,o.jsx)(r.code,{children:"zrok release"})," command or click the delete button in the share's ",(0,o.jsx)(r.em,{children:"Actions"})," tab in the web console."]}),"\n",(0,o.jsx)(r.h2,{id:"unique-names",children:"Unique Names"}),"\n",(0,o.jsxs)(r.p,{children:["The default is to generate a random ",(0,o.jsx)(r.em,{children:"share token"})," and you may specify a ",(0,o.jsx)(r.em,{children:"unique name"}),"."]}),"\n",(0,o.jsx)(r.p,{children:'This reserves public share token "myshare."'}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",metastring:'title="Reserve with the Command Line"',children:'zrok reserve public 80 --unique-name "myshare"\n'})}),"\n",(0,o.jsxs)(r.p,{children:["This shares ",(0,o.jsx)(r.code,{children:"127.0.0.1:80"})," as ",(0,o.jsx)(r.code,{children:"https://myshare.zrok.example.com"})," where ",(0,o.jsx)(r.code,{children:"https://{token}.zrok.example.com"})," is the frontend's template."]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",metastring:'title="Share a Reserved Token"',children:'zrok share reserved "myshare"\n'})})]})}function l(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>a,x:()=>i});var n=s(6540);const o={},t=n.createContext(o);function a(e){const r=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(t.Provider,{value:r},e.children)}}}]);