"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[596],{20922:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"myzrok/limits","title":"Limits","description":"NetFoundry\'s public zrok instance implements various limits based on pricing tier,","source":"@site/versioned_docs/version-1.0/myzrok/limits.md","sourceDirName":"myzrok","slug":"/myzrok/limits","permalink":"/docs/1.0/myzrok/limits","draft":false,"unlisted":false,"editUrl":"https://github.com/openziti/zrok/blob/main/docs/versioned_docs/version-1.0/myzrok/limits.md","tags":[],"version":"1.0","frontMatter":{"title":"Limits"},"sidebar":"tutorialSidebar","previous":{"title":"Custom Domains","permalink":"/docs/1.0/myzrok/custom-domains/"},"next":{"title":"Upgrading From 0.4 to 1.0","permalink":"/docs/1.0/myzrok/upgrading"}}');var r=t(74848),n=t(28453);const o={title:"Limits"},a=void 0,l={},d=[{value:"Limits on Shares, Environments, or Bandwidth",id:"limits-on-shares-environments-or-bandwidth",level:3},{value:"Rate Limitations For Public Shares",id:"rate-limitations-for-public-shares",level:3},{value:"Per IP Address",id:"per-ip-address",level:4},{value:"Per Share",id:"per-share",level:4}];function c(e){const i={a:"a",em:"em",h3:"h3",h4:"h4",p:"p",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.p,{children:"NetFoundry's public zrok instance implements various limits based on pricing tier,\nas well as rate limits in order to protect the service for all users."}),"\n",(0,r.jsx)(i.h3,{id:"limits-on-shares-environments-or-bandwidth",children:"Limits on Shares, Environments, or Bandwidth"}),"\n",(0,r.jsxs)(i.p,{children:["The number of shares, enviroments, or allowed bandwidth is based on the limits outlined within your myzrok subscription.\nThese limits are defined on the ",(0,r.jsx)(i.a,{href:"https://zrok.io/pricing/",children:"zrok pricing"})," page.\nBandwidth limitations are based on a rolling 24 hour window. Note that if you exceed the daily bandwidth of your plan,\nany running shares will be disabled, and the zrok API will prevent any new shares from being created until the bandwidth\nfalls back below the 24 hour limit."]}),"\n",(0,r.jsx)(i.h3,{id:"rate-limitations-for-public-shares",children:"Rate Limitations For Public Shares"}),"\n",(0,r.jsx)(i.p,{children:"Public shares are subject to API rate limiting, both by IP address, as well as the individual share token.\nThese limits exist to protect the zrok service so that one user does not negatively impact the experience for others.\nThe rate limits for public shares are defined below:"}),"\n",(0,r.jsx)(i.h4,{id:"per-ip-address",children:"Per IP Address"}),"\n",(0,r.jsx)(i.p,{children:"2000 requests per 300 seconds (average of 6.66 requests per second)"}),"\n",(0,r.jsx)(i.p,{children:"The rate limiter will allow a burst of requests in a shorter timespan up to 2000 requests, but once the rate limit has been exceeded,\nnew requests will be blocked until the request rate falls below the limit of the 300 second window."}),"\n",(0,r.jsx)(i.h4,{id:"per-share",children:"Per Share"}),"\n",(0,r.jsxs)(i.p,{children:["7500 requests per 300 seconds from ",(0,r.jsx)(i.em,{children:"any number of IP addresses"})," (average of 25 requests per second)"]})]})}function h(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,i,t)=>{t.d(i,{R:()=>o,x:()=>a});var s=t(96540);const r={},n=s.createContext(r);function o(e){const i=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(n.Provider,{value:i},e.children)}}}]);